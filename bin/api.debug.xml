<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<debugInfo>
<pcToLineNum>
<entry filename="api/Ant.mb" lineNum="74" pc="805306373" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="75" pc="805306383" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="131" pc="805306396" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="132" pc="805306412" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="133" pc="805306428" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="134" pc="805306444" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="135" pc="805306460" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="136" pc="805306476" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="137" pc="805306492" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="138" pc="805306508" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="141" pc="805306524" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="143" pc="805306531" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="146" pc="805306566" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="148" pc="805306585" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="151" pc="805306620" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="153" pc="805306639" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="156" pc="805306674" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="158" pc="805306693" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="161" pc="805306728" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="163" pc="805306747" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="166" pc="805306782" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="168" pc="805306801" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="171" pc="805306836" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="173" pc="805306855" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="176" pc="805306890" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="178" pc="805306909" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="181" pc="805306944" symbol="initialize"/>
<entry filename="api/Ant.mb" lineNum="255" pc="805306969" symbol="getPayload"/>
<entry filename="api/Ant.mb" lineNum="256" pc="805307023" symbol="getPayload"/>
<entry filename="api/Ant.mb" lineNum="258" pc="805307034" symbol="getPayload"/>
<entry filename="api/Ant.mb" lineNum="260" pc="805307055" symbol="getPayload"/>
<entry filename="api/Ant.mb" lineNum="261" pc="805307081" symbol="getPayload"/>
<entry filename="api/Ant.mb" lineNum="264" pc="805307114" symbol="getPayload"/>
<entry filename="api/Ant.mb" lineNum="271" pc="805307120" symbol="setPayload"/>
<entry filename="api/Ant.mb" lineNum="272" pc="805307146" symbol="setPayload"/>
<entry filename="api/Ant.mb" lineNum="277" pc="805307175" symbol="setPayloadWithOffset"/>
<entry filename="api/Ant.mb" lineNum="279" pc="805307182" symbol="setPayloadWithOffset"/>
<entry filename="api/Ant.mb" lineNum="281" pc="805307209" symbol="setPayloadWithOffset"/>
<entry filename="api/Ant.mb" lineNum="284" pc="805307273" symbol="setPayloadWithOffset"/>
<entry filename="api/Application.mb" lineNum="31" pc="805307280" symbol="onStart"/>
<entry filename="api/Application.mb" lineNum="42" pc="805307286" symbol="getInitialView"/>
<entry filename="api/Application.mb" lineNum="54" pc="805307291" symbol="onStop"/>
<entry filename="api/Application.mb" lineNum="62" pc="805307297" symbol="getProperty"/>
<entry filename="api/Application.mb" lineNum="64" pc="805307310" symbol="getProperty"/>
<entry filename="api/Application.mb" lineNum="67" pc="805307332" symbol="getProperty"/>
<entry filename="api/Application.mb" lineNum="80" pc="805307355" symbol="setProperty"/>
<entry filename="api/Application.mb" lineNum="82" pc="805307371" symbol="setProperty"/>
<entry filename="api/Application.mb" lineNum="84" pc="805307384" symbol="setProperty"/>
<entry filename="api/Application.mb" lineNum="87" pc="805307406" symbol="setProperty"/>
<entry filename="api/Application.mb" lineNum="94" pc="805307427" symbol="setProperty"/>
<entry filename="api/Application.mb" lineNum="96" pc="805307454" symbol="setProperty"/>
<entry filename="api/Application.mb" lineNum="97" pc="805307464" symbol="setProperty"/>
<entry filename="api/Application.mb" lineNum="100" pc="805307489" symbol="setProperty"/>
<entry filename="api/Application.mb" lineNum="107" pc="805307494" symbol="deleteProperty"/>
<entry filename="api/Application.mb" lineNum="18" pc="805320344" symbol="&lt;init&gt;"/>
<entry filename="api/Application.mb" lineNum="20" pc="805320353" symbol="&lt;init&gt;"/>
<entry filename="api/Attention.mb" lineNum="64" pc="805307518" symbol="initialize"/>
<entry filename="api/Attention.mb" lineNum="65" pc="805307528" symbol="initialize"/>
<entry filename="api/Communications.mb" lineNum="48" pc="805307541" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="50" pc="805307548" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="51" pc="805307561" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="53" pc="805307561" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="55" pc="805307581" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="57" pc="805307591" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="58" pc="805307613" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="59" pc="805307623" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="61" pc="805307648" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="63" pc="805307672" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="64" pc="805307682" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="65" pc="805307701" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="66" pc="805307711" symbol="makeJsonRequest"/>
<entry filename="api/Communications.mb" lineNum="72" pc="805307752" symbol="makeJsonRequest"/>
<entry filename="api/Fit.mb" lineNum="164" pc="805307787" symbol="get"/>
<entry filename="api/Lang.mb" lineNum="56" pc="805307804" symbol="toNumber"/>
<entry filename="api/Lang.mb" lineNum="102" pc="805307814" symbol="toLong"/>
<entry filename="api/Lang.mb" lineNum="132" pc="805307820" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="145" pc="805307840" symbol="toFloat"/>
<entry filename="api/Lang.mb" lineNum="197" pc="805307850" symbol="toDouble"/>
<entry filename="api/Lang.mb" lineNum="229" pc="805307856" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="289" pc="805307877" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="322" pc="805307884" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="341" pc="805307894" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="342" pc="805307901" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="344" pc="805307914" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="346" pc="805307929" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="347" pc="805307939" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="349" pc="805307953" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="352" pc="805307979" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="354" pc="805307989" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="371" pc="805307996" symbol="initialize"/>
<entry filename="api/Lang.mb" lineNum="372" pc="805308006" symbol="initialize"/>
<entry filename="api/Lang.mb" lineNum="384" pc="805308019" symbol="hashCode"/>
<entry filename="api/Lang.mb" lineNum="434" pc="805308040" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="435" pc="805308053" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="437" pc="805308060" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="439" pc="805308084" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="441" pc="805308117" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="443" pc="805308140" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="447" pc="805308166" symbol="toString"/>
<entry filename="api/Lang.mb" lineNum="449" pc="805308176" symbol="toString"/>
<entry filename="api/Positioning.mb" lineNum="51" pc="805308188" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="52" pc="805308198" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="53" pc="805308209" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="55" pc="805308220" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="56" pc="805308236" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="58" pc="805308252" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="60" pc="805308263" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="61" pc="805308285" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="65" pc="805308321" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="66" pc="805308346" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="73" pc="805308388" symbol="initialize"/>
<entry filename="api/Positioning.mb" lineNum="81" pc="805308414" symbol="toDegrees"/>
<entry filename="api/Positioning.mb" lineNum="82" pc="805308444" symbol="toDegrees"/>
<entry filename="api/Positioning.mb" lineNum="84" pc="805308474" symbol="toDegrees"/>
<entry filename="api/Positioning.mb" lineNum="91" pc="805308504" symbol="toRadians"/>
<entry filename="api/Positioning.mb" lineNum="92" pc="805308515" symbol="toRadians"/>
<entry filename="api/Positioning.mb" lineNum="93" pc="805308538" symbol="toRadians"/>
<entry filename="api/Positioning.mb" lineNum="95" pc="805308561" symbol="toRadians"/>
<entry filename="api/System.mb" lineNum="70" pc="805308596" symbol="println"/>
<entry filename="api/System.mb" lineNum="99" pc="805308628" symbol="exit"/>
<entry filename="api/Time.mb" lineNum="33" pc="805308654" symbol="initialize"/>
<entry filename="api/Time.mb" lineNum="56" pc="805308667" symbol="add"/>
<entry filename="api/Time.mb" lineNum="58" pc="805308681" symbol="add"/>
<entry filename="api/Time.mb" lineNum="60" pc="805308727" symbol="add"/>
<entry filename="api/Time.mb" lineNum="68" pc="805308751" symbol="subtract"/>
<entry filename="api/Time.mb" lineNum="70" pc="805308765" symbol="subtract"/>
<entry filename="api/Time.mb" lineNum="71" pc="805308787" symbol="subtract"/>
<entry filename="api/Time.mb" lineNum="74" pc="805308824" symbol="subtract"/>
<entry filename="api/Time.mb" lineNum="82" pc="805308848" symbol="compare"/>
<entry filename="api/Time.mb" lineNum="84" pc="805308862" symbol="compare"/>
<entry filename="api/Time.mb" lineNum="86" pc="805308886" symbol="compare"/>
<entry filename="api/Time.mb" lineNum="94" pc="805308910" symbol="lessThan"/>
<entry filename="api/Time.mb" lineNum="96" pc="805308924" symbol="lessThan"/>
<entry filename="api/Time.mb" lineNum="98" pc="805308948" symbol="lessThan"/>
<entry filename="api/Time.mb" lineNum="106" pc="805308972" symbol="greaterThan"/>
<entry filename="api/Time.mb" lineNum="108" pc="805308986" symbol="greaterThan"/>
<entry filename="api/Time.mb" lineNum="110" pc="805309010" symbol="greaterThan"/>
<entry filename="api/Time.mb" lineNum="117" pc="805309034" symbol="value"/>
<entry filename="api/Time.mb" lineNum="129" pc="805309046" symbol="initialize"/>
<entry filename="api/Time.mb" lineNum="137" pc="805309059" symbol="add"/>
<entry filename="api/Time.mb" lineNum="139" pc="805309073" symbol="add"/>
<entry filename="api/Time.mb" lineNum="143" pc="805309130" symbol="add"/>
<entry filename="api/Time.mb" lineNum="145" pc="805309147" symbol="add"/>
<entry filename="api/Time.mb" lineNum="153" pc="805309171" symbol="subtract"/>
<entry filename="api/Time.mb" lineNum="155" pc="805309185" symbol="subtract"/>
<entry filename="api/Time.mb" lineNum="156" pc="805309204" symbol="subtract"/>
<entry filename="api/Time.mb" lineNum="158" pc="805309241" symbol="subtract"/>
<entry filename="api/Time.mb" lineNum="166" pc="805309265" symbol="multiply"/>
<entry filename="api/Time.mb" lineNum="169" pc="805309304" symbol="multiply"/>
<entry filename="api/Time.mb" lineNum="171" pc="805309341" symbol="multiply"/>
<entry filename="api/Time.mb" lineNum="179" pc="805309365" symbol="divide"/>
<entry filename="api/Time.mb" lineNum="182" pc="805309404" symbol="divide"/>
<entry filename="api/Time.mb" lineNum="184" pc="805309441" symbol="divide"/>
<entry filename="api/Time.mb" lineNum="192" pc="805309465" symbol="compare"/>
<entry filename="api/Time.mb" lineNum="194" pc="805309479" symbol="compare"/>
<entry filename="api/Time.mb" lineNum="196" pc="805309503" symbol="compare"/>
<entry filename="api/Time.mb" lineNum="204" pc="805309527" symbol="lessThan"/>
<entry filename="api/Time.mb" lineNum="206" pc="805309541" symbol="lessThan"/>
<entry filename="api/Time.mb" lineNum="208" pc="805309565" symbol="lessThan"/>
<entry filename="api/Time.mb" lineNum="216" pc="805309589" symbol="greaterThan"/>
<entry filename="api/Time.mb" lineNum="218" pc="805309603" symbol="greaterThan"/>
<entry filename="api/Time.mb" lineNum="220" pc="805309627" symbol="greaterThan"/>
<entry filename="api/Time.mb" lineNum="227" pc="805309651" symbol="value"/>
<entry filename="api/Time.mb" lineNum="260" pc="805309663" symbol="getMonthHash"/>
<entry filename="api/Time.mb" lineNum="262" pc="805309676" symbol="getMonthHash"/>
<entry filename="api/Time.mb" lineNum="264" pc="805309849" symbol="getMonthHash"/>
<entry filename="api/Time.mb" lineNum="269" pc="805309861" symbol="getDayHash"/>
<entry filename="api/Time.mb" lineNum="271" pc="805309874" symbol="getDayHash"/>
<entry filename="api/Time.mb" lineNum="273" pc="805309985" symbol="getDayHash"/>
<entry filename="api/Time.mb" lineNum="287" pc="805309997" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="288" pc="805309997" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="290" pc="805310021" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="292" pc="805310034" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="293" pc="805310044" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="294" pc="805310054" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="295" pc="805310064" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="296" pc="805310071" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="297" pc="805310078" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="301" pc="805310085" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="303" pc="805310104" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="308" pc="805310117" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="310" pc="805310136" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="312" pc="805310160" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="316" pc="805310200" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="320" pc="805310216" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="322" pc="805310235" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="324" pc="805310248" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="326" pc="805310267" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="328" pc="805310280" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="330" pc="805310299" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="332" pc="805310312" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="334" pc="805310331" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="337" pc="805310344" symbol="moment"/>
<entry filename="api/Time.mb" lineNum="355" pc="805310371" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="356" pc="805310371" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="358" pc="805310378" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="359" pc="805310388" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="360" pc="805310398" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="361" pc="805310408" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="362" pc="805310418" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="364" pc="805310428" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="366" pc="805310435" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="368" pc="805310454" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="370" pc="805310461" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="372" pc="805310480" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="374" pc="805310487" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="376" pc="805310506" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="378" pc="805310513" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="380" pc="805310532" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="382" pc="805310539" symbol="duration"/>
<entry filename="api/Time.mb" lineNum="385" pc="805310549" symbol="duration"/>
<entry filename="api/WatchUi.mb" lineNum="66" pc="805310580" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="73" pc="805310593" symbol="getKey"/>
<entry filename="api/WatchUi.mb" lineNum="104" pc="805310605" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="105" pc="805310615" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="106" pc="805310625" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="113" pc="805310638" symbol="getCoordinates"/>
<entry filename="api/WatchUi.mb" lineNum="120" pc="805310680" symbol="getType"/>
<entry filename="api/WatchUi.mb" lineNum="147" pc="805310692" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="154" pc="805310705" symbol="getDirection"/>
<entry filename="api/WatchUi.mb" lineNum="190" pc="805310718" symbol="onKey"/>
<entry filename="api/WatchUi.mb" lineNum="199" pc="805310724" symbol="onTap"/>
<entry filename="api/WatchUi.mb" lineNum="208" pc="805310730" symbol="onHold"/>
<entry filename="api/WatchUi.mb" lineNum="217" pc="805310736" symbol="onRelease"/>
<entry filename="api/WatchUi.mb" lineNum="225" pc="805310742" symbol="onSwipe"/>
<entry filename="api/WatchUi.mb" lineNum="232" pc="805310748" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="233" pc="805310752" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="235" pc="805310762" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="237" pc="805310776" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="241" pc="805310808" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="243" pc="805310827" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="245" pc="805310841" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="249" pc="805310873" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="253" pc="805310905" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="258" pc="805310940" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="260" pc="805310958" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="289" pc="805310965" symbol="onNextPage"/>
<entry filename="api/WatchUi.mb" lineNum="296" pc="805310971" symbol="onPreviousPage"/>
<entry filename="api/WatchUi.mb" lineNum="303" pc="805310977" symbol="onMenu"/>
<entry filename="api/WatchUi.mb" lineNum="310" pc="805310983" symbol="onBack"/>
<entry filename="api/WatchUi.mb" lineNum="317" pc="805310989" symbol="onNextMode"/>
<entry filename="api/WatchUi.mb" lineNum="324" pc="805310995" symbol="onPreviousMode"/>
<entry filename="api/WatchUi.mb" lineNum="332" pc="805311001" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="333" pc="805311005" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="335" pc="805311015" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="337" pc="805311029" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="341" pc="805311059" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="345" pc="805311089" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="349" pc="805311119" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="353" pc="805311149" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="357" pc="805311179" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="360" pc="805311195" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="362" pc="805311203" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="365" pc="805311227" symbol="handleEvent"/>
<entry filename="api/WatchUi.mb" lineNum="389" pc="805311234" symbol="findDrawableById"/>
<entry filename="api/WatchUi.mb" lineNum="391" pc="805311241" symbol="findDrawableById"/>
<entry filename="api/WatchUi.mb" lineNum="394" pc="805311246" symbol="findDrawableById"/>
<entry filename="api/WatchUi.mb" lineNum="396" pc="805311249" symbol="findDrawableById"/>
<entry filename="api/WatchUi.mb" lineNum="398" pc="805311279" symbol="findDrawableById"/>
<entry filename="api/WatchUi.mb" lineNum="400" pc="805311335" symbol="findDrawableById"/>
<entry filename="api/WatchUi.mb" lineNum="401" pc="805311348" symbol="findDrawableById"/>
<entry filename="api/WatchUi.mb" lineNum="405" pc="805311367" symbol="findDrawableById"/>
<entry filename="api/WatchUi.mb" lineNum="414" pc="805311373" symbol="onLayout"/>
<entry filename="api/WatchUi.mb" lineNum="421" pc="805311379" symbol="onShow"/>
<entry filename="api/WatchUi.mb" lineNum="436" pc="805311385" symbol="onUpdate"/>
<entry filename="api/WatchUi.mb" lineNum="437" pc="805311421" symbol="onUpdate"/>
<entry filename="api/WatchUi.mb" lineNum="438" pc="805311433" symbol="onUpdate"/>
<entry filename="api/WatchUi.mb" lineNum="440" pc="805311446" symbol="onUpdate"/>
<entry filename="api/WatchUi.mb" lineNum="442" pc="805311476" symbol="onUpdate"/>
<entry filename="api/WatchUi.mb" lineNum="445" pc="805311515" symbol="onUpdate"/>
<entry filename="api/WatchUi.mb" lineNum="451" pc="805311521" symbol="onHide"/>
<entry filename="api/WatchUi.mb" lineNum="460" pc="805311526" symbol="setLayout"/>
<entry filename="api/WatchUi.mb" lineNum="462" pc="805311540" symbol="setLayout"/>
<entry filename="api/WatchUi.mb" lineNum="538" pc="805311568" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="546" pc="805311584" symbol="compute"/>
<entry filename="api/WatchUi.mb" lineNum="574" pc="805311593" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="575" pc="805311603" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="587" pc="805311616" symbol="setTitle"/>
<entry filename="api/WatchUi.mb" lineNum="595" pc="805311629" symbol="addItem"/>
<entry filename="api/WatchUi.mb" lineNum="597" pc="805311649" symbol="addItem"/>
<entry filename="api/WatchUi.mb" lineNum="598" pc="805311677" symbol="addItem"/>
<entry filename="api/WatchUi.mb" lineNum="599" pc="805311696" symbol="addItem"/>
<entry filename="api/WatchUi.mb" lineNum="579" pc="805319848" symbol="&lt;init&gt;"/>
<entry filename="api/WatchUi.mb" lineNum="633" pc="805311726" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="645" pc="805311739" symbol="onResponse"/>
<entry filename="api/WatchUi.mb" lineNum="685" pc="805311752" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="686" pc="805311762" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="698" pc="805311775" symbol="onNumberPicked"/>
<entry filename="api/WatchUi.mb" lineNum="717" pc="805311782" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="718" pc="805311792" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="725" pc="805311805" symbol="setProgress"/>
<entry filename="api/WatchUi.mb" lineNum="726" pc="805311815" symbol="setProgress"/>
<entry filename="api/WatchUi.mb" lineNum="733" pc="805311830" symbol="setDisplayString"/>
<entry filename="api/WatchUi.mb" lineNum="734" pc="805311840" symbol="setDisplayString"/>
<entry filename="api/WatchUi.mb" lineNum="751" pc="805311855" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="794" pc="805311875" symbol="pushView"/>
<entry filename="api/WatchUi.mb" lineNum="801" pc="805311904" symbol="popView"/>
<entry filename="api/WatchUi.mb" lineNum="810" pc="805311931" symbol="switchToView"/>
<entry filename="api/WatchUi.mb" lineNum="838" pc="805311966" symbol="toString"/>
<entry filename="api/WatchUi.mb" lineNum="882" pc="805312036" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="883" pc="805312054" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="885" pc="805312061" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="889" pc="805312074" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="892" pc="805312087" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="893" pc="805312105" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="895" pc="805312112" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="899" pc="805312125" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="902" pc="805312138" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="903" pc="805312156" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="905" pc="805312163" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="909" pc="805312176" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="912" pc="805312189" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="913" pc="805312207" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="915" pc="805312214" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="919" pc="805312227" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="922" pc="805312240" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="923" pc="805312258" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="925" pc="805312265" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="929" pc="805312278" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="943" pc="805312293" symbol="setLocation"/>
<entry filename="api/WatchUi.mb" lineNum="944" pc="805312303" symbol="setLocation"/>
<entry filename="api/WatchUi.mb" lineNum="952" pc="805312316" symbol="setSize"/>
<entry filename="api/WatchUi.mb" lineNum="953" pc="805312326" symbol="setSize"/>
<entry filename="api/WatchUi.mb" lineNum="971" pc="805312339" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="973" pc="805312359" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="974" pc="805312377" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="976" pc="805312384" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="980" pc="805312401" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="981" pc="805312410" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="982" pc="805312423" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="990" pc="805312439" symbol="getDimensions"/>
<entry filename="api/WatchUi.mb" lineNum="992" pc="805312452" symbol="getDimensions"/>
<entry filename="api/WatchUi.mb" lineNum="996" pc="805312512" symbol="getDimensions"/>
<entry filename="api/WatchUi.mb" lineNum="1004" pc="805312548" symbol="draw"/>
<entry filename="api/WatchUi.mb" lineNum="1006" pc="805312561" symbol="draw"/>
<entry filename="api/WatchUi.mb" lineNum="1014" pc="805312603" symbol="setBitmap"/>
<entry filename="api/WatchUi.mb" lineNum="1015" pc="805312630" symbol="setBitmap"/>
<entry filename="api/WatchUi.mb" lineNum="1016" pc="805312655" symbol="setBitmap"/>
<entry filename="api/WatchUi.mb" lineNum="1042" pc="805312683" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1044" pc="805312703" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1045" pc="805312721" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1047" pc="805312728" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1051" pc="805312745" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1054" pc="805312758" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1055" pc="805312776" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1057" pc="805312783" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1061" pc="805312796" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1064" pc="805312816" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1065" pc="805312834" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1067" pc="805312841" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1071" pc="805312854" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1074" pc="805312874" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1075" pc="805312892" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1077" pc="805312899" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1081" pc="805312912" symbol="initialize"/>
<entry filename="api/WatchUi.mb" lineNum="1089" pc="805312935" symbol="draw"/>
<entry filename="api/WatchUi.mb" lineNum="1090" pc="805312967" symbol="draw"/>
<entry filename="api/WatchUi.mb" lineNum="1097" pc="805313022" symbol="setColor"/>
<entry filename="api/WatchUi.mb" lineNum="1104" pc="805313035" symbol="setFont"/>
<entry filename="api/WatchUi.mb" lineNum="1111" pc="805313048" symbol="setJustification"/>
<entry filename="api/WatchUi.mb" lineNum="1118" pc="805313061" symbol="setText"/>
<entry filename="api/WatchUi.mb" lineNum="1120" pc="805313075" symbol="setText"/>
<entry filename="api/WatchUi.mb" lineNum="1124" pc="805313088" symbol="setText"/>
<entry filename="api/antplus/AntPlus.mb" lineNum="89" pc="805313114" symbol="getDeviceNumber"/>
<entry filename="api/antplus/AntPlus.mb" lineNum="98" pc="805313126" symbol="initialize"/>
<entry filename="api/antplus/AntPlus.mb" lineNum="100" pc="805313133" symbol="initialize"/>
<entry filename="api/antplus/AntPlus.mb" lineNum="104" pc="805313146" symbol="initialize"/>
<entry filename="api/antplus/AntPlus.mb" lineNum="106" pc="805313159" symbol="initialize"/>
<entry filename="api/antplus/AntPlus.mb" lineNum="108" pc="805313169" symbol="initialize"/>
<entry filename="api/antplus/BikePower.mb" lineNum="132" pc="805313193" symbol="initialize"/>
<entry filename="api/antplus/BikePower.mb" lineNum="134" pc="805313204" symbol="initialize"/>
<entry filename="api/antplus/BikePower.mb" lineNum="138" pc="805313228" symbol="initialize"/>
<entry filename="api/antplus/Geocache.mb" lineNum="43" pc="805313262" symbol="initialize"/>
<entry filename="api/antplus/WeightScale.mb" lineNum="153" pc="805313299" symbol="initialize"/>
<entry filename="test/Fit.mb" lineNum="12" pc="805313332" symbol="testCreateSession"/>
<entry filename="test/Fit.mb" lineNum="13" pc="805313394" symbol="testCreateSession"/>
<entry filename="test/Fit.mb" lineNum="18" pc="805313415" symbol="testGeometryIterator"/>
<entry filename="test/Fit.mb" lineNum="19" pc="805313415" symbol="testGeometryIterator"/>
<entry filename="test/Fit.mb" lineNum="20" pc="805313415" symbol="testGeometryIterator"/>
<entry filename="test/Fit.mb" lineNum="21" pc="805313422" symbol="testGeometryIterator"/>
<entry filename="test/Fit.mb" lineNum="23" pc="805313441" symbol="testGeometryIterator"/>
<entry filename="test/Fit.mb" lineNum="25" pc="805313448" symbol="testGeometryIterator"/>
<entry filename="test/Fit.mb" lineNum="27" pc="805313461" symbol="testGeometryIterator"/>
<entry filename="test/Fit.mb" lineNum="29" pc="805313478" symbol="testGeometryIterator"/>
<entry filename="test/Fit.mb" lineNum="30" pc="805313491" symbol="testGeometryIterator"/>
<entry filename="test/Fit.mb" lineNum="37" pc="805313510" symbol="testStopDiscardRecording"/>
<entry filename="test/Fit.mb" lineNum="38" pc="805313528" symbol="testStopDiscardRecording"/>
<entry filename="test/Language.mb" lineNum="12" pc="805313549" symbol="testArray"/>
<entry filename="test/Language.mb" lineNum="14" pc="805313570" symbol="testArray"/>
<entry filename="test/Language.mb" lineNum="15" pc="805313589" symbol="testArray"/>
<entry filename="test/Language.mb" lineNum="16" pc="805313597" symbol="testArray"/>
<entry filename="test/Language.mb" lineNum="18" pc="805313622" symbol="testArray"/>
<entry filename="test/Language.mb" lineNum="19" pc="805313630" symbol="testArray"/>
<entry filename="test/Language.mb" lineNum="20" pc="805313655" symbol="testArray"/>
<entry filename="test/Language.mb" lineNum="21" pc="805313669" symbol="testArray"/>
<entry filename="test/Language.mb" lineNum="26" pc="805313685" symbol="testInstanceof"/>
<entry filename="test/Language.mb" lineNum="30" pc="805313706" symbol="testInstanceof"/>
<entry filename="test/Language.mb" lineNum="39" pc="805313731" symbol="testInheritanceName"/>
<entry filename="test/Language.mb" lineNum="44" pc="805313758" symbol="testSubstringAndFind"/>
<entry filename="test/Language.mb" lineNum="45" pc="805313765" symbol="testSubstringAndFind"/>
<entry filename="test/Language.mb" lineNum="46" pc="805313783" symbol="testSubstringAndFind"/>
<entry filename="test/Language.mb" lineNum="47" pc="805313803" symbol="testSubstringAndFind"/>
<entry filename="test/Language.mb" lineNum="49" pc="805313825" symbol="testSubstringAndFind"/>
<entry filename="test/Language.mb" lineNum="51" pc="805313849" symbol="testSubstringAndFind"/>
<entry filename="test/Language.mb" lineNum="55" pc="805313855" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="56" pc="805313868" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="57" pc="805313881" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="58" pc="805313898" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="60" pc="805313915" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="61" pc="805313928" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="63" pc="805313939" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="65" pc="805313965" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="66" pc="805313978" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="68" pc="805313989" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="70" pc="805314015" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="71" pc="805314028" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="73" pc="805314043" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="75" pc="805314069" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="76" pc="805314082" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="78" pc="805314097" symbol="testAbs"/>
<entry filename="test/Language.mb" lineNum="84" pc="805314126" symbol="testFetchRegister"/>
<entry filename="test/Language.mb" lineNum="88" pc="805314159" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="90" pc="805314166" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="91" pc="805314184" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="92" pc="805314195" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="96" pc="805314214" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="97" pc="805314225" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="100" pc="805314251" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="102" pc="805314258" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="103" pc="805314269" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="104" pc="805314280" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="106" pc="805314286" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="109" pc="805314299" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="110" pc="805314310" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="113" pc="805314336" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="114" pc="805314343" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="115" pc="805314343" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="116" pc="805314354" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="118" pc="805314360" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="121" pc="805314381" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="122" pc="805314392" symbol="testBreak"/>
<entry filename="test/Language.mb" lineNum="127" pc="805314421" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="129" pc="805314428" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="130" pc="805314446" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="131" pc="805314449" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="135" pc="805314485" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="136" pc="805314492" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="137" pc="805314503" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="138" pc="805314513" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="139" pc="805314516" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="142" pc="805314542" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="143" pc="805314549" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="144" pc="805314549" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="145" pc="805314559" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="146" pc="805314577" symbol="testContinue"/>
<entry filename="test/Language.mb" lineNum="147" pc="805314580" symbol="testContinue"/>
<entry filename="test/LongDouble.mb" lineNum="6" pc="805314617" symbol="testAdd"/>
<entry filename="test/LongDouble.mb" lineNum="11" pc="805314629" symbol="testSub"/>
<entry filename="test/LongDouble.mb" lineNum="16" pc="805314641" symbol="testMul"/>
<entry filename="test/LongDouble.mb" lineNum="21" pc="805314653" symbol="testDiv"/>
<entry filename="test/LongDouble.mb" lineNum="26" pc="805314665" symbol="testBitwiseAnd"/>
<entry filename="test/LongDouble.mb" lineNum="31" pc="805314677" symbol="testBitwiseOr"/>
<entry filename="test/LongDouble.mb" lineNum="36" pc="805314689" symbol="testBitwiseXor"/>
<entry filename="test/LongDouble.mb" lineNum="41" pc="805314701" symbol="testShiftL"/>
<entry filename="test/LongDouble.mb" lineNum="46" pc="805314714" symbol="testShiftR"/>
<entry filename="test/LongDouble.mb" lineNum="51" pc="805314727" symbol="testLessThan"/>
<entry filename="test/LongDouble.mb" lineNum="56" pc="805314739" symbol="testLessThanEqual"/>
<entry filename="test/LongDouble.mb" lineNum="61" pc="805314751" symbol="testGreaterThan"/>
<entry filename="test/LongDouble.mb" lineNum="66" pc="805314763" symbol="testGreaterThanEqual"/>
<entry filename="test/LongDouble.mb" lineNum="71" pc="805314775" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="72" pc="805314782" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="73" pc="805314789" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="74" pc="805314800" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="76" pc="805314811" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="78" pc="805314832" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="81" pc="805314838" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="83" pc="805314855" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="86" pc="805314861" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="88" pc="805314882" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="91" pc="805314888" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="93" pc="805314905" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="96" pc="805314911" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="98" pc="805314932" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="101" pc="805314938" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="103" pc="805314955" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="106" pc="805314961" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="108" pc="805314982" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="111" pc="805314988" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="113" pc="805315005" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="115" pc="805315011" symbol="testTypeCreation"/>
<entry filename="test/LongDouble.mb" lineNum="120" pc="805315017" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="122" pc="805315030" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="124" pc="805315051" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="127" pc="805315057" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="128" pc="805315070" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="130" pc="805315091" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="133" pc="805315097" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="134" pc="805315110" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="136" pc="805315131" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="138" pc="805315137" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="139" pc="805315150" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="141" pc="805315171" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="144" pc="805315177" symbol="testTypeConversion"/>
<entry filename="test/LongDouble.mb" lineNum="149" pc="805315183" symbol="testBooleanOperations"/>
<entry filename="test/LongDouble.mb" lineNum="150" pc="805315194" symbol="testBooleanOperations"/>
<entry filename="test/LongDouble.mb" lineNum="152" pc="805315205" symbol="testBooleanOperations"/>
<entry filename="test/LongDouble.mb" lineNum="157" pc="805315213" symbol="testBooleanOperations"/>
<entry filename="test/LongDouble.mb" lineNum="160" pc="805315236" symbol="testBooleanOperations"/>
<entry filename="test/LongDouble.mb" lineNum="162" pc="805315241" symbol="testBooleanOperations"/>
<entry filename="test/LongDouble.mb" lineNum="165" pc="805315267" symbol="testBooleanOperations"/>
<entry filename="test/LongDouble.mb" lineNum="170" pc="805315276" symbol="testBooleanOperations"/>
<entry filename="test/LongDouble.mb" lineNum="179" pc="805315299" symbol="testBooleanOperations"/>
<entry filename="test/LongDouble.mb" lineNum="185" pc="805315305" symbol="testObjectLock"/>
<entry filename="test/LongDouble.mb" lineNum="186" pc="805315316" symbol="testObjectLock"/>
<entry filename="test/LongDouble.mb" lineNum="188" pc="805315323" symbol="testObjectLock"/>
<entry filename="test/LongDouble.mb" lineNum="190" pc="805315341" symbol="testObjectLock"/>
<entry filename="test/Math.mb" lineNum="7" pc="805315364" symbol="testIncr"/>
<entry filename="test/Math.mb" lineNum="8" pc="805315371" symbol="testIncr"/>
<entry filename="test/Math.mb" lineNum="9" pc="805315381" symbol="testIncr"/>
<entry filename="test/Math.mb" lineNum="13" pc="805315393" symbol="testDecr"/>
<entry filename="test/Math.mb" lineNum="15" pc="805315400" symbol="testDecr"/>
<entry filename="test/Math.mb" lineNum="16" pc="805315410" symbol="testDecr"/>
<entry filename="test/Math.mb" lineNum="20" pc="805315422" symbol="testNaN"/>
<entry filename="test/Math.mb" lineNum="24" pc="805315458" symbol="testLog"/>
<entry filename="test/Math.mb" lineNum="25" pc="805315462" symbol="testLog"/>
<entry filename="test/Math.mb" lineNum="27" pc="805315484" symbol="testLog"/>
<entry filename="test/Math.mb" lineNum="28" pc="805315509" symbol="testLog"/>
<entry filename="test/Math.mb" lineNum="32" pc="805315516" symbol="testLog"/>
<entry filename="test/Math.mb" lineNum="33" pc="805315550" symbol="testLog"/>
<entry filename="test/Math.mb" lineNum="36" pc="805315557" symbol="testLog"/>
<entry filename="test/Object.mb" lineNum="11" pc="805315563" symbol="getCallback"/>
<entry filename="test/Object.mb" lineNum="16" pc="805315583" symbol="callback"/>
<entry filename="test/Object.mb" lineNum="7" pc="805318663" symbol="&lt;init&gt;"/>
<entry filename="test/Positioning.mb" lineNum="7" pc="805315597" symbol="testLocationRadians"/>
<entry filename="test/Positioning.mb" lineNum="9" pc="805315664" symbol="testLocationRadians"/>
<entry filename="test/Positioning.mb" lineNum="14" pc="805315670" symbol="testLocationDegree"/>
<entry filename="test/Positioning.mb" lineNum="16" pc="805315737" symbol="testLocationDegree"/>
<entry filename="test/Positioning.mb" lineNum="21" pc="805315743" symbol="testLocationSemicircles"/>
<entry filename="test/Positioning.mb" lineNum="23" pc="805315810" symbol="testLocationSemicircles"/>
<entry filename="test/System.mb" lineNum="5" pc="805315816" symbol="testSystemError"/>
<entry filename="test/Time.mb" lineNum="8" pc="805315842" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="9" pc="805315917" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="11" pc="805315930" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="12" pc="805316005" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="14" pc="805316018" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="18" pc="805316054" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="19" pc="805316069" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="21" pc="805316082" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="23" pc="805316090" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="26" pc="805316114" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="27" pc="805316215" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="28" pc="805316251" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="30" pc="805316266" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="32" pc="805316298" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="36" pc="805316322" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="37" pc="805316337" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="39" pc="805316357" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="43" pc="805316381" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="45" pc="805316403" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="48" pc="805316427" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="50" pc="805316449" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="53" pc="805316473" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="55" pc="805316495" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="59" pc="805316519" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="61" pc="805316538" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="63" pc="805316562" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="65" pc="805316581" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="67" pc="805316605" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="69" pc="805316624" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="73" pc="805316648" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="75" pc="805316667" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="77" pc="805316691" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="79" pc="805316710" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="81" pc="805316734" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="83" pc="805316753" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="87" pc="805316777" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="88" pc="805316813" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="89" pc="805316831" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="91" pc="805316851" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="93" pc="805316875" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="94" pc="805316893" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="96" pc="805316913" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="100" pc="805316937" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="101" pc="805316955" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="103" pc="805316975" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="105" pc="805316999" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="106" pc="805317017" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="108" pc="805317037" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="110" pc="805317061" symbol="testDuration"/>
<entry filename="test/Time.mb" lineNum="114" pc="805317067" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="115" pc="805317168" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="117" pc="805317181" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="118" pc="805317282" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="120" pc="805317295" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="123" pc="805317331" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="124" pc="805317346" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="126" pc="805317359" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="128" pc="805317367" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="131" pc="805317391" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="133" pc="805317413" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="136" pc="805317437" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="138" pc="805317459" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="141" pc="805317483" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="143" pc="805317505" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="147" pc="805317529" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="148" pc="805317544" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="150" pc="805317564" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="154" pc="805317588" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="156" pc="805317607" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="158" pc="805317631" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="160" pc="805317650" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="162" pc="805317674" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="164" pc="805317693" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="168" pc="805317717" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="170" pc="805317736" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="172" pc="805317760" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="174" pc="805317779" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="176" pc="805317803" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="178" pc="805317822" symbol="testMoment"/>
<entry filename="test/Time.mb" lineNum="180" pc="805317846" symbol="testMoment"/>
<entry filename="test/Timer.mb" lineNum="14" pc="805317852" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="15" pc="805317886" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="16" pc="805317920" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="17" pc="805317933" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="19" pc="805317946" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="20" pc="805317987" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="25" pc="805318031" symbol="stop"/>
<entry filename="test/Timer.mb" lineNum="30" pc="805318052" symbol="callback1"/>
<entry filename="test/Timer.mb" lineNum="35" pc="805318074" symbol="callback2"/>
<entry filename="test/Timer.mb" lineNum="46" pc="805318097" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="47" pc="805318131" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="49" pc="805318144" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="54" pc="805318188" symbol="callback1"/>
<entry filename="test/Timer.mb" lineNum="56" pc="805318207" symbol="callback1"/>
<entry filename="test/Timer.mb" lineNum="58" pc="805318224" symbol="callback1"/>
<entry filename="test/Timer.mb" lineNum="72" pc="805318249" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="73" pc="805318283" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="74" pc="805318317" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="75" pc="805318330" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="77" pc="805318343" symbol="start"/>
<entry filename="test/Timer.mb" lineNum="82" pc="805318387" symbol="stop"/>
<entry filename="test/Timer.mb" lineNum="87" pc="805318408" symbol="callback1"/>
<entry filename="test/Timer.mb" lineNum="88" pc="805318427" symbol="callback1"/>
<entry filename="test/Timer.mb" lineNum="90" pc="805318444" symbol="callback1"/>
<entry filename="test/Timer.mb" lineNum="96" pc="805318491" symbol="callback2"/>
<entry filename="test/User.mb" lineNum="8" pc="805318514" symbol="testUserProfile"/>
<entry filename="test/User.mb" lineNum="9" pc="805318531" symbol="testUserProfile"/>
<entry filename="test/dictionary.mb" lineNum="9" pc="805318537" symbol="insertString"/>
<entry filename="test/dictionary.mb" lineNum="10" pc="805318555" symbol="insertString"/>
<entry filename="test/dictionary.mb" lineNum="11" pc="805318572" symbol="insertString"/>
<entry filename="test/dictionary.mb" lineNum="16" pc="805318578" symbol="insertWithPut"/>
<entry filename="test/dictionary.mb" lineNum="17" pc="805318586" symbol="insertWithPut"/>
<entry filename="test/dictionary.mb" lineNum="18" pc="805318605" symbol="insertWithPut"/>
</pcToLineNum>
<symbolTable>
<entry id="8389359" symbol="&lt;gre&gt;"/>
<entry id="8389061" symbol="mMode"/>
<entry field="true" id="8388831" symbol="SPORT_RUNNING"/>
<entry field="true" id="8389423" symbol="DEVICE_STATE_CNT"/>
<entry field="true" id="8388974" symbol="TONE_ALARM"/>
<entry id="8388823" method="true" symbol="emptyMailbox"/>
<entry id="8388634" module="true" symbol="Ant"/>
<entry field="true" id="8388906" symbol="MOVE_BAR_LEVEL_MAX"/>
<entry field="true" id="8388737" symbol="calories"/>
<entry field="true" id="8389205" symbol="MSG_ID_CHANNEL_TRANSMIT_POWER"/>
<entry id="8389060" object="true" symbol="Text"/>
<entry id="8389051" method="true" symbol="switchToView"/>
<entry id="8388638" module="true" symbol="ActivityRecording"/>
<entry id="8388635" module="true" symbol="Application"/>
<entry id="8388637" module="true" symbol="Communications"/>
<entry id="8389330" symbol="december"/>
<entry field="true" id="8389206" symbol="MSG_ID_LOW_PRIORITY_SEARCH_TIMEOUT"/>
<entry id="8389093" symbol="mTitle"/>
<entry field="true" id="8388951" symbol="SENSOR_BIKECADENCE"/>
<entry id="8389362" symbol="&lt;ita&gt;"/>
<entry field="true" id="8389521" symbol="modelNumber"/>
<entry field="true" id="8389421" symbol="DEVICE_STATE_SEARCHING"/>
<entry id="8389115" symbol="mMessage"/>
<entry field="true" id="8388810" symbol="INVALID_HTTP_HEADER_FIELDS_IN_REQUEST"/>
<entry id="8388924" module="true" symbol="Gregorian"/>
<entry field="true" id="8389055" symbol="POP_VIEW"/>
<entry id="8389316" symbol="radians"/>
<entry field="true" id="8388738" symbol="currentSpeed"/>
<entry id="8389085" symbol="mDisplayString"/>
<entry id="8388676" method="true" symbol="testTypeCreation"/>
<entry field="true" id="8388852" symbol="SUB_SPORT_STREET"/>
<entry id="8388910" method="true" symbol="getHistory"/>
<entry field="true" id="8389002" symbol="KEY_RIGHT"/>
<entry field="true" id="8389163" symbol="COLOR_ORANGE"/>
<entry id="8388662" method="true" symbol="testContinue"/>
<entry field="true" id="8389149" symbol="restingHeartRate"/>
<entry id="8388644" module="true" symbol="System"/>
<entry field="true" id="8388876" symbol="SUB_SPORT_CARDIO_TRAINING"/>
<entry field="true" id="8389443" symbol="WEIGHT_SCALE_GENDER_MALE"/>
<entry id="8389358" symbol="&lt;deu&gt;"/>
<entry field="true" id="8388807" symbol="BLE_REQUEST_TOO_LARGE"/>
<entry id="8388819" method="true" symbol="makeImageRequest"/>
<entry id="8388630" module="true" symbol="Toybox_Position"/>
<entry id="8389354" symbol="&lt;dut&gt;"/>
<entry id="8388821" method="true" symbol="getMailbox"/>
<entry id="8388957" method="true" symbol="enableSensorEvents"/>
<entry field="true" id="8388811" symbol="INVALID_HTTP_BODY_IN_REQUEST"/>
<entry field="true" id="8388750" symbol="currentCadence"/>
<entry id="8388629" module="true" symbol="Toybox_Application"/>
<entry field="true" id="8389522" symbol="serial"/>
<entry id="8388944" method="true" symbol="compare"/>
<entry id="8389019" object="true" symbol="SwipeEvent"/>
<entry field="true" id="8389073" symbol="BEHAVIOR_PREVIOUS_PAGE"/>
<entry field="true" id="8389155" symbol="FONT_MEDIUM"/>
<entry id="8388663" method="true" symbol="testAdd"/>
<entry id="8389119" method="true" symbol="getDirection"/>
<entry field="true" id="8389475" symbol="rightPedalSmoothness"/>
<entry id="8389101" method="true" symbol="onSwipe"/>
<entry id="8389247" symbol="measurementType"/>
<entry id="8388786" method="true" symbol="method"/>
<entry id="8389261" symbol="mHiddenData"/>
<entry field="true" id="8388808" symbol="BLE_UNKNOWN_SEND_ERROR"/>
<entry id="8388666" method="true" symbol="testDiv"/>
<entry field="true" id="8389295" symbol="QUALITY_POOR"/>
<entry id="8388678" method="true" symbol="testBooleanOperations"/>
<entry id="8389027" object="true" symbol="Menu"/>
<entry id="8389364" symbol="&lt;pol&gt;"/>
<entry id="8389306" symbol="lon"/>
<entry field="true" id="8389035" symbol="NUMBER_PICKER_TIME_MIN_SEC"/>
<entry id="8389023" object="true" symbol="View"/>
<entry id="8389087" method="true" symbol="setProgress"/>
<entry id="8388899" method="true" symbol="log"/>
<entry field="true" id="8389501" symbol="muscleMass"/>
<entry id="8389099" method="true" symbol="onHold"/>
<entry id="8389478" method="true" symbol="getCommonData"/>
<entry field="true" id="8388742" symbol="currentPower"/>
<entry id="8389440" object="true" symbol="GeocacheProgrammableData"/>
<entry id="8389031" object="true" symbol="Confirmation"/>
<entry id="8389383" method="true" symbol="getObscurityFlags"/>
<entry id="8389193" method="true" symbol="getTextWidthInPixels"/>
<entry id="8389069" method="true" symbol="setLocation"/>
<entry id="8389363" symbol="&lt;nob&gt;"/>
<entry id="8388659" method="true" symbol="testAbs"/>
<entry field="true" id="8388989" symbol="dutyCycle"/>
<entry id="8389043" object="true" symbol="ProgressBar"/>
<entry field="true" id="8388927" symbol="SECONDS_PER_YEAR"/>
<entry id="8389418" object="true" symbol="CommonData"/>
<entry id="8389114" method="true" symbol="getType"/>
<entry field="true" id="8389427" symbol="BIKE_POWER_SENSOR_TYPE_POWER_ONLY"/>
<entry id="8389032" object="true" symbol="ConfirmationDelegate"/>
<entry field="true" id="8389520" symbol="manufacturerId"/>
<entry id="8388614" module="true" symbol="Toybox_Activity"/>
<entry id="8389177" method="true" symbol="clear"/>
<entry field="true" id="8388891" symbol="subSport"/>
<entry field="true" id="8388964" symbol="pressure"/>
<entry id="8389303" method="true" symbol="enableLocationEvents"/>
<entry id="8388768" object="true" symbol="Exception"/>
<entry id="8389184" method="true" symbol="drawLine"/>
<entry id="8389250" symbol="timestamp"/>
<entry id="8388877" method="true" symbol="createSession"/>
<entry id="8388616" module="true" symbol="Toybox_Communications"/>
<entry field="true" id="8389380" symbol="OBSCURE_TOP"/>
<entry field="true" id="8389201" symbol="MSG_ID_SEARCH_TIMEOUT"/>
<entry id="8389057" method="true" symbol="pageCtrlNative"/>
<entry id="8389493" method="true" symbol="getWeightScaleStatus"/>
<entry id="8388649" module="true" symbol="Test"/>
<entry field="true" id="8388837" symbol="SPORT_SOCCER"/>
<entry field="true" id="8389496" symbol="basalMetabolicRate"/>
<entry field="true" id="8388958" symbol="speed"/>
<entry id="8388887" symbol="mData"/>
<entry field="true" id="8389508" symbol="athleteSetting"/>
<entry field="true" id="8389458" symbol="WEIGHT_SCALE_STATUS_FOUND"/>
<entry field="true" id="8389289" symbol="GEO_DEG"/>
<entry field="true" id="8389420" symbol="DEVICE_STATE_CLOSED"/>
<entry id="8388926" symbol="dayHash"/>
<entry field="true" id="8389248" symbol="rssi"/>
<entry id="8389118" symbol="mDirection"/>
<entry field="true" id="8389103" symbol="behavior"/>
<entry id="8389252" method="true" symbol="setPayload"/>
<entry id="8389108" method="true" symbol="onResponse"/>
<entry field="true" id="8389506" symbol="age"/>
<entry field="true" id="8389503" symbol="pedalPowerPercent"/>
<entry field="true" id="8388963" symbol="altitude"/>
<entry field="true" id="8389200" symbol="MSG_ID_CHANNEL_PERIOD"/>
<entry id="8389463" object="true" symbol="WeightScaleUserProfile"/>
<entry id="8389190" method="true" symbol="drawText"/>
<entry id="8389105" symbol="mBitmapData"/>
<entry id="8389425" object="true" symbol="Device"/>
<entry field="true" id="8388833" symbol="SPORT_TRANSITION"/>
<entry id="8388620" module="true" symbol="Toybox_Time"/>
<entry id="8389468" symbol="DEVICE_TYPE_GEOCACHE"/>
<entry field="true" id="8388848" symbol="SPORT_MULTISPORT"/>
<entry field="true" id="8388804" symbol="BLE_NO_DATA"/>
<entry field="true" id="8388892" symbol="name"/>
<entry id="8388895" method="true" symbol="acos"/>
<entry field="true" id="8388815" symbol="INVALID_HTTP_HEADER_FIELDS_IN_NETWORK_RESPONSE"/>
<entry field="true" id="8388801" symbol="BLE_ERROR"/>
<entry id="8388771" object="true" symbol="Drawables"/>
<entry field="true" id="8389008" symbol="ANIM_TYPE_EASE_OUT"/>
<entry id="8388943" method="true" symbol="subtract"/>
<entry id="8389339" symbol="second"/>
<entry field="true" id="8389227" symbol="MSG_CODE_INVALID_MESSAGE"/>
<entry id="8389020" method="true" symbol="animate"/>
<entry field="true" id="8388950" symbol="SENSOR_BIKESPEED"/>
<entry field="true" id="8389076" symbol="BEHAVIOR_ON_NEXT_MODE"/>
<entry id="8389084" method="true" symbol="handleEvent"/>
<entry id="8388946" method="true" symbol="greaterThan"/>
<entry field="true" id="8389148" symbol="walkingStepLength"/>
<entry id="8388701" method="true" symbol="callback2"/>
<entry id="8388611" module="true" symbol="Toybox"/>
<entry id="8388700" method="true" symbol="callback1"/>
<entry id="8388699" method="true" symbol="stop"/>
<entry field="true" id="8388855" symbol="SUB_SPORT_SPIN"/>
<entry id="8388668" method="true" symbol="testBitwiseOr"/>
<entry id="8389320" symbol="february"/>
<entry field="true" id="8388838" symbol="SPORT_TENNIS"/>
<entry field="true" id="8388961" symbol="power"/>
<entry field="true" id="8388747" symbol="currentHeartRate"/>
<entry field="true" id="8388967" symbol="TONE_START"/>
<entry field="true" id="8389143" symbol="weight"/>
<entry field="true" id="8389006" symbol="ANIM_TYPE_LINEAR"/>
<entry id="8388936" method="true" symbol="info"/>
<entry id="8389234" object="true" symbol="DeviceConfig"/>
<entry id="8389026" method="true" symbol="requestUpdate"/>
<entry field="true" id="8388997" symbol="KEY_MENU"/>
<entry id="8389376" method="true" symbol="onEnterSleep"/>
<entry field="true" id="8389497" symbol="bodyFatPercentage"/>
<entry id="8388798" method="true" symbol="toLower"/>
<entry field="true" id="8388735" symbol="currentLocationAccuracy"/>
<entry id="8388677" method="true" symbol="testTypeConversion"/>
<entry id="8388942" method="true" symbol="add"/>
<entry id="8388889" symbol="mIndex"/>
<entry id="8388610" symbol="statics"/>
<entry id="8389116" method="true" symbol="getHeight"/>
<entry id="8388675" method="true" symbol="testGreaterThanEqual"/>
<entry id="8389393" method="true" symbol="initResources"/>
<entry id="8388665" method="true" symbol="testMul"/>
<entry field="true" id="8389404" symbol="elevationUnits"/>
<entry field="true" id="8389223" symbol="MSG_CODE_EVENT_RX_FAIL_GO_TO_SEARCH"/>
<entry id="8388829" method="true" symbol="onComplete"/>
<entry id="8388777" method="true" symbol="toLong"/>
<entry id="8388642" module="true" symbol="Position"/>
<entry id="8389187" method="true" symbol="fillPolygon"/>
<entry field="true" id="8389210" symbol="MSG_ID_OPEN_CHANNEL"/>
<entry field="true" id="8389153" symbol="FONT_TINY"/>
<entry id="8389433" object="true" symbol="CalculatedPower"/>
<entry id="8388932" symbol="getDayHash"/>
<entry id="8389534" module="true" symbol="PersistedLocations"/>
<entry id="8389347" symbol="color"/>
<entry field="true" id="8389156" symbol="FONT_LARGE"/>
<entry field="true" id="8389004" symbol="KEY_UP_LEFT"/>
<entry id="8388886" symbol="Toybox_ActivityRecording_Session"/>
<entry id="8388687" method="true" symbol="testLocationSemicircles"/>
<entry field="true" id="8389216" symbol="MSG_CODE_EVENT_RX_SEARCH_TIMEOUT"/>
<entry field="true" id="8388952" symbol="SENSOR_BIKEPOWER"/>
<entry field="true" id="8388853" symbol="SUB_SPORT_TRAIL"/>
<entry field="true" id="8389203" symbol="MSG_ID_NETWORK_KEY"/>
<entry id="8388774" method="true" symbol="abs"/>
<entry id="8389098" method="true" symbol="onTap"/>
<entry field="true" id="8389416" symbol="BATT_STATUS_INVALID"/>
<entry field="true" id="8389417" symbol="BATT_STATUS_CNT"/>
<entry id="8388759" object="true" symbol="Long"/>
<entry id="8388945" method="true" symbol="lessThan"/>
<entry field="true" id="8389239" symbol="DATA_PAYLOAD_LENGTH"/>
<entry field="true" id="8388976" symbol="TONE_LAP"/>
<entry id="8389142" method="true" symbol="getProfile"/>
<entry id="8389188" method="true" symbol="fillRectangle"/>
<entry id="8388729" object="true" symbol="Info"/>
<entry id="8388710" object="true" symbol="Stats"/>
<entry field="true" id="8389152" symbol="FONT_XTINY"/>
<entry id="8389189" method="true" symbol="fillRoundedRectangle"/>
<entry id="8389324" symbol="june"/>
<entry field="true" id="8389268" symbol="DEFAULT_SEARCH_TIMEOUT_HIGH"/>
<entry field="true" id="8388830" symbol="SPORT_GENERIC"/>
<entry field="true" id="8388999" symbol="KEY_DOWN_LEFT"/>
<entry id="8388885" method="true" symbol="getGeometry"/>
<entry id="8389082" method="true" symbol="onNextMode"/>
<entry id="8389279" method="true" symbol="onStart"/>
<entry field="true" id="8389419" symbol="DEVICE_STATE_DEAD"/>
<entry field="true" id="8388969" symbol="TONE_MSG"/>
<entry field="true" id="8389237" symbol="channelType"/>
<entry id="8389186" method="true" symbol="fillEllipse"/>
<entry id="8389049" method="true" symbol="pushView"/>
<entry field="true" id="8389312" symbol="when"/>
<entry id="8389080" method="true" symbol="onMenu"/>
<entry id="8388956" method="true" symbol="setEnabledSensors"/>
<entry id="8388619" module="true" symbol="Toybox_ActivityMonitor"/>
<entry id="8388631" module="true" symbol="Activity"/>
<entry id="8389361" symbol="&lt;hrv&gt;"/>
<entry id="8388896" method="true" symbol="asin"/>
<entry field="true" id="8388802" symbol="BLE_HOST_TIMEOUT"/>
<entry field="true" id="8388912" symbol="steps"/>
<entry id="8389191" method="true" symbol="getTextDimensions"/>
<entry field="true" id="8389037" symbol="NUMBER_PICKER_WEIGHT"/>
<entry field="true" id="8389406" symbol="heightUnits"/>
<entry id="8389329" symbol="november"/>
<entry id="8389325" symbol="july"/>
<entry field="true" id="8388959" symbol="cadence"/>
<entry id="8388650" object="true" symbol="Dictionary"/>
<entry id="8388627" module="true" symbol="Toybox_Graphics"/>
<entry id="8388767" object="true" symbol="Method"/>
<entry field="true" id="8388994" symbol="KEY_ENTER"/>
<entry field="true" id="8389264" symbol="DEFAULT_TRANSMISSION_TYPE"/>
<entry field="true" id="8389005" symbol="KEY_UP_RIGHT"/>
<entry field="true" id="8388726" symbol="freeMemory"/>
<entry id="8389079" method="true" symbol="onPreviousPage"/>
<entry id="8389538" object="true" symbol="TextPickerDelegate"/>
<entry field="true" id="8389381" symbol="OBSCURE_RIGHT"/>
<entry id="8388714" method="true" symbol="getClockTime"/>
<entry id="8388775" method="true" symbol="toNumber"/>
<entry id="8389355" symbol="&lt;eng&gt;"/>
<entry field="true" id="8388860" symbol="SUB_SPORT_RECUMBENT"/>
<entry id="8389124" method="true" symbol="onUpdate"/>
<entry field="true" id="8388960" symbol="heartRate"/>
<entry field="true" id="8389445" symbol="WEIGHT_SCALE_GENDER_CNT"/>
<entry id="8388672" method="true" symbol="testLessThan"/>
<entry id="8388824" method="true" symbol="transmit"/>
<entry field="true" id="8389170" symbol="COLOR_PINK"/>
<entry id="8388884" object="true" symbol="GeometryIterator"/>
<entry field="true" id="8389462" symbol="WEIGHT_SCALE_STATUS_CNT"/>
<entry id="8388716" method="true" symbol="trap"/>
<entry id="8388652" method="true" symbol="testCreateSession"/>
<entry field="true" id="8389396" symbol="UNIT_STATUTE"/>
<entry field="true" id="8388725" symbol="usedMemory"/>
<entry field="true" id="8389453" symbol="WEIGHT_SCALE_ACTIVITY_LEVEL_RESERVED"/>
<entry id="8388621" module="true" symbol="Toybox_Time_Gregorian"/>
<entry id="8389342" symbol="hours"/>
<entry id="8389129" symbol="mJustification"/>
<entry field="true" id="8388748" symbol="averageHeartRate"/>
<entry id="8389327" symbol="september"/>
<entry id="8389132" method="true" symbol="setFont"/>
<entry field="true" id="8389519" symbol="torque"/>
<entry field="true" id="8389529" symbol="userProfileSelected"/>
<entry field="true" id="8389039" symbol="NUMBER_PICKER_CALORIES"/>
<entry id="8389541" method="true" symbol="onCancel"/>
<entry field="true" id="8388968" symbol="TONE_STOP"/>
<entry field="true" id="8389509" symbol="wheelSpeed"/>
<entry field="true" id="8389244" symbol="deviceNumber"/>
<entry id="8389467" object="true" symbol="WeightScale"/>
<entry id="8388761" object="true" symbol="Double"/>
<entry field="true" id="8388865" symbol="SUB_SPORT_ELLIPTICAL"/>
<entry field="true" id="8389166" symbol="COLOR_DK_GREEN"/>
<entry id="8389259" method="true" symbol="sendAcknowledge"/>
<entry field="true" id="8389159" symbol="COLOR_DK_GRAY"/>
<entry id="8389375" object="true" symbol="WatchFace"/>
<entry field="true" id="8389498" symbol="bodyWeight"/>
<entry id="8389435" object="true" symbol="CalculatedWheelDistance"/>
<entry field="true" id="8389442" symbol="WEIGHT_SCALE_GENDER_FEMALE"/>
<entry field="true" id="8388911" symbol="distance"/>
<entry id="8389391" method="true" symbol="testArray"/>
<entry field="true" id="8388724" symbol="battery"/>
<entry id="8388948" method="true" symbol="multiply"/>
<entry id="8389041" object="true" symbol="NumberPicker"/>
<entry field="true" id="8389232" symbol="CHANNEL_TYPE_RX_NOT_TX"/>
<entry id="8388988" method="true" symbol="backlight"/>
<entry field="true" id="8388893" symbol="PI"/>
<entry id="8389344" symbol="seconds"/>
<entry field="true" id="8388854" symbol="SUB_SPORT_TRACK"/>
<entry id="8389432" object="true" symbol="CalculatedCrankCadence"/>
<entry field="true" id="8388651" symbol="session"/>
<entry field="true" id="8388868" symbol="SUB_SPORT_OPEN_WATER"/>
<entry id="8389251" method="true" symbol="getPayload"/>
<entry id="8388925" symbol="monthHash"/>
<entry id="8388643" module="true" symbol="Sensor"/>
<entry id="8388987" method="true" symbol="vibrate"/>
<entry id="8388905" method="true" symbol="tan"/>
<entry id="8388766" object="true" symbol="Array"/>
<entry field="true" id="8389225" symbol="MSG_CODE_CHANNEL_ID_NOT_SET"/>
<entry id="8388773" method="true" symbol="toFloat"/>
<entry id="8389305" symbol="lat"/>
<entry id="8389235" object="true" symbol="GenericChannel"/>
<entry field="true" id="8389158" symbol="COLOR_LT_GRAY"/>
<entry field="true" id="8389240" symbol="messageId"/>
<entry id="8389241" symbol="dataLow"/>
<entry id="8389366" symbol="&lt;rus&gt;"/>
<entry field="true" id="8388939" symbol="day"/>
<entry field="true" id="8389204" symbol="MSG_ID_TRANSMIT_POWER"/>
<entry field="true" id="8389154" symbol="FONT_SMALL"/>
<entry id="8388921" object="true" symbol="Duration"/>
<entry id="8388673" method="true" symbol="testLessThanEqual"/>
<entry field="true" id="8388929" symbol="SECONDS_PER_HOUR"/>
<entry field="true" id="8389208" symbol="MSG_ID_PROXIMITY_SEARCH"/>
<entry id="8389336" symbol="friday"/>
<entry id="8388655" method="true" symbol="testInstanceof"/>
<entry field="true" id="8388980" symbol="TONE_FAILURE"/>
<entry id="8388613" module="true" symbol="Toybox_System"/>
<entry field="true" id="8388871" symbol="SUB_SPORT_WARM_UP"/>
<entry field="true" id="8389172" symbol="TEXT_JUSTIFY_RIGHT"/>
<entry field="true" id="8388857" symbol="SUB_SPORT_ROAD"/>
<entry id="8388763" object="true" symbol="String"/>
<entry id="8389469" method="true" symbol="getDownloadProgress"/>
<entry field="true" id="8389047" symbol="SLIDE_DOWN"/>
<entry field="true" id="8388856" symbol="SUB_SPORT_INDOOR_CYCLING"/>
<entry field="true" id="8389382" symbol="OBSCURE_BOTTOM"/>
<entry id="8389287" method="true" symbol="saveProperties"/>
<entry field="true" id="8388727" symbol="totalMemory"/>
<entry field="true" id="8389400" symbol="tonesOn"/>
<entry field="true" id="8388756" symbol="averageDistance"/>
<entry id="8389494" method="true" symbol="setUserProfile"/>
<entry id="8389377" method="true" symbol="onExitSleep"/>
<entry id="8388941" symbol="mDateTime"/>
<entry id="8388799" method="true" symbol="toUpper"/>
<entry id="8388681" method="true" symbol="testDecr"/>
<entry field="true" id="8389499" symbol="boneMass"/>
<entry field="true" id="8388835" symbol="SPORT_SWIMMING"/>
<entry id="8388796" method="true" symbol="find"/>
<entry field="true" id="8388914" symbol="moveBarLevel"/>
<entry field="true" id="8389202" symbol="MSG_ID_CHANNEL_RF_FREQUENCY"/>
<entry id="8388933" method="true" symbol="moment"/>
<entry id="8388669" method="true" symbol="testBitwiseXor"/>
<entry field="true" id="8389486" symbol="numberOfVisits"/>
<entry id="8389194" method="true" symbol="getFontHeight"/>
<entry field="true" id="8388867" symbol="SUB_SPORT_LAP_SWIMMING"/>
<entry id="8388615" module="true" symbol="Toybox_Lang"/>
<entry id="8389491" method="true" symbol="getCapabilities"/>
<entry field="true" id="8389301" symbol="LOCATION_CONTINUOUS"/>
<entry id="8389318" symbol="semicircles"/>
<entry field="true" id="8388940" symbol="year"/>
<entry field="true" id="8388723" symbol="timeZoneOffset"/>
<entry field="true" id="8389272" symbol="searchTimeoutLowPriority"/>
<entry field="true" id="8388983" symbol="TONE_LOW_BATTERY"/>
<entry id="8389178" method="true" symbol="drawCircle"/>
<entry id="8389281" method="true" symbol="onStop"/>
<entry field="true" id="8389429" symbol="BIKE_POWER_SENSOR_TYPE_CRANK_TORQUE"/>
<entry field="true" id="8389385" symbol="FONT_NUMBER_MILD"/>
<entry id="8388789" method="true" symbol="get"/>
<entry id="8389465" object="true" symbol="WeightScaleAdvancedReading"/>
<entry id="8389334" symbol="wednesday"/>
<entry field="true" id="8389046" symbol="SLIDE_RIGHT"/>
<entry field="true" id="8389065" symbol="locY"/>
<entry field="true" id="8388984" symbol="TONE_ERROR"/>
<entry field="true" id="8389064" symbol="locX"/>
<entry field="true" id="8389212" symbol="MSG_ID_BROADCAST_DATA"/>
<entry field="true" id="8389430" symbol="BIKE_POWER_SENSOR_TYPE_CRANK_TORQUE_FREQUENCY"/>
<entry id="8388822" method="true" symbol="setMailboxListener"/>
<entry id="8388657" method="true" symbol="testInheritanceName"/>
<entry id="8388826" method="true" symbol="next"/>
<entry id="8388792" method="true" symbol="isEmpty"/>
<entry id="8389357" symbol="&lt;fre&gt;"/>
<entry field="true" id="8389495" symbol="activeMetabolicRate"/>
<entry field="true" id="8388998" symbol="KEY_DOWN"/>
<entry field="true" id="8389407" symbol="temperatureUnits"/>
<entry field="true" id="8389524" symbol="swRevisionSupplemental"/>
<entry field="true" id="8388851" symbol="SUB_SPORT_TREADMILL"/>
<entry id="8389398" method="true" symbol="getDeviceSettings"/>
<entry field="true" id="8389238" symbol="network"/>
<entry id="8388639" module="true" symbol="Graphics"/>
<entry field="true" id="8389502" symbol="rightPedalIndicator"/>
<entry field="true" id="8388816" symbol="NETWORK_RESPONSE_TOO_LARGE"/>
<entry field="true" id="8389395" symbol="UNIT_METRIC"/>
<entry id="8389130" symbol="mColor"/>
<entry id="8388888" symbol="mLocation"/>
<entry field="true" id="8389500" symbol="hydrationPercentage"/>
<entry id="8389283" method="true" symbol="setProperty"/>
<entry field="true" id="8389089" symbol="MAX_SIZE"/>
<entry field="true" id="8389401" symbol="is24Hour"/>
<entry id="8389464" object="true" symbol="WeightScaleBasicReading"/>
<entry field="true" id="8389145" symbol="wakeTime"/>
<entry field="true" id="8388938" symbol="month"/>
<entry field="true" id="8389217" symbol="MSG_CODE_EVENT_RX_FAIL"/>
<entry id="8389285" method="true" symbol="clearProperties"/>
<entry field="true" id="8388834" symbol="SPORT_FITNESS_EQUIPMENT"/>
<entry id="8389369" symbol="&lt;spa&gt;"/>
<entry id="8389537" object="true" symbol="TextPicker"/>
<entry id="8388788" method="true" symbol="put"/>
<entry id="8389183" method="true" symbol="drawBitmap"/>
<entry id="8389307" method="true" symbol="toDegrees"/>
<entry id="8389441" object="true" symbol="Geocache"/>
<entry field="true" id="8389054" symbol="PUSH_VIEW"/>
<entry id="8388664" method="true" symbol="testSub"/>
<entry field="true" id="8388875" symbol="SUB_SPORT_INDOOR_SKIING"/>
<entry field="true" id="8389270" symbol="messagePeriod"/>
<entry field="true" id="8389426" symbol="BIKE_POWER_SENSOR_TYPE_NONE"/>
<entry id="8389350" symbol="globals"/>
<entry field="true" id="8389015" symbol="SWIPE_UP"/>
<entry field="true" id="8389530" symbol="userProfileExchangeSupport"/>
<entry id="8389236" object="true" symbol="Message"/>
<entry field="true" id="8388740" symbol="maxSpeed"/>
<entry id="8389322" symbol="april"/>
<entry id="8389304" method="true" symbol="testInfoString"/>
<entry field="true" id="8388839" symbol="SPORT_AMERICAN_FOOTBALL"/>
<entry id="8388778" symbol="mClass"/>
<entry id="8388934" method="true" symbol="momentNative"/>
<entry field="true" id="8389000" symbol="KEY_DOWN_RIGHT"/>
<entry id="8388641" module="true" symbol="Math"/>
<entry id="8389409" module="true" symbol="Toybox_AntPlus"/>
<entry field="true" id="8388800" symbol="UNKNOWN_ERROR"/>
<entry id="8388760" object="true" symbol="Float"/>
<entry id="8389081" method="true" symbol="onBack"/>
<entry field="true" id="8389044" symbol="SLIDE_IMMEDIATE"/>
<entry field="true" id="8388757" symbol="currentHeading"/>
<entry id="8388828" method="true" symbol="onError"/>
<entry field="true" id="8389104" symbol="event"/>
<entry field="true" id="8388746" symbol="totalDescent"/>
<entry id="8389410" module="true" symbol="AntPlus"/>
<entry id="8388827" symbol="mOffset"/>
<entry id="8389135" symbol="mKey"/>
<entry field="true" id="8388703" symbol="callbackCalled"/>
<entry id="8388706" method="true" symbol="insertString"/>
<entry field="true" id="8388993" symbol="KEY_ZOUT"/>
<entry field="true" id="8389311" symbol="accuracy"/>
<entry field="true" id="8389218" symbol="MSG_CODE_EVENT_TX"/>
<entry id="8389277" symbol="mProperties"/>
<entry field="true" id="8389461" symbol="WEIGHT_SCALE_STATUS_COMPLETE"/>
<entry id="8389439" object="true" symbol="BikePower"/>
<entry id="8389257" method="true" symbol="close"/>
<entry id="8389489" method="true" symbol="getAdvancedReading"/>
<entry id="8388713" method="true" symbol="getTimer"/>
<entry id="8388772" object="true" symbol="Fonts"/>
<entry field="true" id="8389033" symbol="NUMBER_PICKER_DISTANCE"/>
<entry field="true" id="8389007" symbol="ANIM_TYPE_EASE_IN"/>
<entry field="true" id="8389300" symbol="LOCATION_ONE_SHOT"/>
<entry id="8388717" method="true" symbol="exit"/>
<entry id="8388949" method="true" symbol="divide"/>
<entry field="true" id="8389526" symbol="batteryStatus"/>
<entry field="true" id="8389460" symbol="WEIGHT_SCALE_STATUS_DATA_TIMEOUT"/>
<entry field="true" id="8388971" symbol="TONE_ALERT_LO"/>
<entry id="8389113" method="true" symbol="getCoordinates"/>
<entry id="8389352" symbol="&lt;ces&gt;"/>
<entry id="8389088" method="true" symbol="setDisplayString"/>
<entry id="8389137" method="true" symbol="compute"/>
<entry id="8388901" method="true" symbol="rand"/>
<entry id="8388617" module="true" symbol="Toybox_ActivityRecording"/>
<entry id="8388986" object="true" symbol="VibeProfile"/>
<entry id="8389014" object="true" symbol="ClickEvent"/>
<entry field="true" id="8388732" symbol="elapsedTime"/>
<entry id="8389256" method="true" symbol="open"/>
<entry id="8388653" method="true" symbol="testGeometryIterator"/>
<entry field="true" id="8389063" symbol="identifier"/>
<entry field="true" id="8389525" symbol="hwRevision"/>
<entry field="true" id="8389219" symbol="MSG_CODE_EVENT_TRANSFER_RX_FAILED"/>
<entry id="8389349" symbol="justification"/>
<entry field="true" id="8388859" symbol="SUB_SPORT_DOWNHILL"/>
<entry field="true" id="8388744" symbol="maxPower"/>
<entry id="8388612" module="true" symbol="Toybox_Test"/>
<entry field="true" id="8389411" symbol="BATT_STATUS_NEW"/>
<entry id="8389028" object="true" symbol="MenuInputDelegate"/>
<entry id="8388705" method="true" symbol="callback"/>
<entry field="true" id="8389528" symbol="batteryVoltage"/>
<entry field="true" id="8389314" symbol="latitude"/>
<entry id="8388688" method="true" symbol="testSystemError"/>
<entry id="8388686" method="true" symbol="testLocationDegree"/>
<entry id="8389368" symbol="&lt;slv&gt;"/>
<entry field="true" id="8388741" symbol="currentPace"/>
<entry field="true" id="8389415" symbol="BATT_STATUS_CRITICAL"/>
<entry id="8389058" object="true" symbol="Drawable"/>
<entry field="true" id="8389013" symbol="CLICK_TYPE_RELEASE"/>
<entry field="true" id="8389077" symbol="BEHAVIOR_ON_PREVIOUS_MODE"/>
<entry id="8389319" symbol="january"/>
<entry id="8389109" method="true" symbol="onMenuItem"/>
<entry field="true" id="8389151" symbol="birthYear"/>
<entry id="8389331" symbol="sunday"/>
<entry field="true" id="8389173" symbol="TEXT_JUSTIFY_CENTER"/>
<entry id="8389070" method="true" symbol="setSize"/>
<entry id="8388712" method="true" symbol="print"/>
<entry field="true" id="8388695" symbol="count2"/>
<entry field="true" id="8388694" symbol="count1"/>
<entry id="8389360" symbol="&lt;hun&gt;"/>
<entry id="8388931" symbol="getMonthHash"/>
<entry field="true" id="8389146" symbol="sleepTime"/>
<entry field="true" id="8388996" symbol="KEY_FIND"/>
<entry field="true" id="8388803" symbol="BLE_SERVER_TIMEOUT"/>
<entry id="8388769" object="true" symbol="Rez"/>
<entry id="8389535" method="true" symbol="persistLocation"/>
<entry id="8389094" method="true" symbol="setTitle"/>
<entry field="true" id="8389074" symbol="BEHAVIOR_ON_MENU"/>
<entry id="8389052" object="true" symbol="FontResource"/>
<entry id="8388765" object="true" symbol="Symbol"/>
<entry id="8389284" method="true" symbol="deleteProperty"/>
<entry field="true" id="8389483" symbol="hint"/>
<entry field="true" id="8388861" symbol="SUB_SPORT_CYCLOCROSS"/>
<entry id="8389533" module="true" symbol="Toybox_PersistedLocations"/>
<entry id="8389515" method="true" symbol="getCalculatedWheelSpeed"/>
<entry id="8388684" object="true" symbol="Object"/>
<entry id="8388900" method="true" symbol="pow"/>
<entry id="8389176" object="true" symbol="Dc"/>
<entry field="true" id="8389230" symbol="NETWORK_PLUS"/>
<entry field="true" id="8389414" symbol="BATT_STATUS_LOW"/>
<entry field="true" id="8388846" symbol="SPORT_MOUNTAINEERING"/>
<entry id="8388908" object="true" symbol="History"/>
<entry field="true" id="8388731" symbol="startTime"/>
<entry field="true" id="8388721" symbol="min"/>
<entry field="true" id="8389197" symbol="MSG_ID_UNASSIGN_CHANNEL"/>
<entry id="8389278" symbol="mPropertiesChanged"/>
<entry field="true" id="8388970" symbol="TONE_ALERT_HI"/>
<entry field="true" id="8389174" symbol="TEXT_JUSTIFY_LEFT"/>
<entry id="8388923" method="true" symbol="today"/>
<entry field="true" id="8389412" symbol="BATT_STATUS_GOOD"/>
<entry field="true" id="8389222" symbol="MSG_CODE_EVENT_CHANNEL_CLOSED"/>
<entry field="true" id="8389505" symbol="userProfileId"/>
<entry id="8388679" method="true" symbol="testObjectLock"/>
<entry id="8389095" method="true" symbol="addItem"/>
<entry field="true" id="8389157" symbol="COLOR_WHITE"/>
<entry field="true" id="8389165" symbol="COLOR_GREEN"/>
<entry field="true" id="8388890" symbol="sport"/>
<entry id="8388693" method="true" symbol="testUserProfile"/>
<entry id="8388920" object="true" symbol="Moment"/>
<entry id="8389371" symbol="&lt;cht&gt;"/>
<entry field="true" id="8388841" symbol="SPORT_WALKING"/>
<entry field="true" id="8389405" symbol="weightUnits"/>
<entry field="true" id="8389198" symbol="MSG_ID_ASSIGN_CHANNEL"/>
<entry field="true" id="8388850" symbol="SUB_SPORT_GENERIC"/>
<entry id="8388818" method="true" symbol="makeJsonRequestNative"/>
<entry id="8389335" symbol="thursday"/>
<entry id="8389185" method="true" symbol="fillCircle"/>
<entry id="8388947" method="true" symbol="value"/>
<entry id="8388654" method="true" symbol="testStopDiscardRecording"/>
<entry id="8388622" module="true" symbol="Toybox_Timer"/>
<entry field="true" id="8389138" symbol="label"/>
<entry field="true" id="8389171" symbol="COLOR_TRANSPARENT"/>
<entry field="true" id="8389231" symbol="CHANNEL_TYPE_TX_NOT_RX"/>
<entry id="8388625" module="true" symbol="Toybox_WatchUi"/>
<entry id="8389042" object="true" symbol="NumberPickerDelegate"/>
<entry field="true" id="8389175" symbol="TEXT_JUSTIFY_VCENTER"/>
<entry id="8389372" symbol="&lt;chs&gt;"/>
<entry id="8388793" method="true" symbol="keys"/>
<entry id="8389348" symbol="font"/>
<entry id="8389280" method="true" symbol="getInitialView"/>
<entry field="true" id="8388870" symbol="SUB_SPORT_STRENGTH_TRAINING"/>
<entry field="true" id="8388858" symbol="SUB_SPORT_MOUNTAIN"/>
<entry id="8389141" object="true" symbol="Profile"/>
<entry field="true" id="8389215" symbol="MSG_CODE_RESPONSE_NO_ERROR"/>
<entry id="8389477" symbol="mDeviceType"/>
<entry id="8389242" symbol="dataHigh"/>
<entry id="8388648" module="true" symbol="WatchUi"/>
<entry field="true" id="8388843" symbol="SPORT_ALPINE_SKIING"/>
<entry field="true" id="8389262" symbol="DEFAULT_DEVICE_NUMBER"/>
<entry field="true" id="8389543" symbol="phoneConnected"/>
<entry id="8388904" method="true" symbol="srand"/>
<entry field="true" id="8389413" symbol="BATT_STATUS_OK"/>
<entry field="true" id="8389399" symbol="vibrateOn"/>
<entry id="8389192" method="true" symbol="setPenWidth"/>
<entry field="true" id="8388918" symbol="FORMAT_MEDIUM"/>
<entry field="true" id="8389012" symbol="CLICK_TYPE_HOLD"/>
<entry field="true" id="8389229" symbol="NETWORK_PUBLIC"/>
<entry id="8389053" object="true" symbol="BitmapResource"/>
<entry field="true" id="8388982" symbol="TONE_POWER"/>
<entry field="true" id="8388842" symbol="SPORT_CROSS_COUNTRY_SKIING"/>
<entry field="true" id="8389310" symbol="position"/>
<entry id="8388633" module="true" symbol="ActivityMonitor"/>
<entry id="8389249" symbol="thresholdConfiguration"/>
<entry id="8389100" method="true" symbol="onRelease"/>
<entry id="8388709" object="true" symbol="ClockTime"/>
<entry id="8388878" object="true" symbol="Symbols"/>
<entry field="true" id="8388734" symbol="elapsedDistance"/>
<entry id="8389112" symbol="mType"/>
<entry field="true" id="8388962" symbol="temperature"/>
<entry id="8389128" symbol="mFont"/>
<entry id="8388784" symbol="mLow"/>
<entry field="true" id="8388928" symbol="SECONDS_PER_DAY"/>
<entry field="true" id="8388814" symbol="INVALID_HTTP_BODY_IN_NETWORK_RESPONSE"/>
<entry field="true" id="8389048" symbol="SLIDE_UP"/>
<entry field="true" id="8388973" symbol="TONE_INTERVAL_ALERT"/>
<entry id="8389298" object="true" symbol="Location"/>
<entry field="true" id="8389523" symbol="swRevisionMain"/>
<entry id="8388715" method="true" symbol="getSystemStats"/>
<entry id="8389516" method="true" symbol="getPedalPowerBalance"/>
<entry id="8388624" module="true" symbol="Toybox_Attention"/>
<entry field="true" id="8389017" symbol="SWIPE_DOWN"/>
<entry id="8388656" object="true" symbol="InputDelegate"/>
<entry field="true" id="8388720" symbol="hour"/>
<entry id="8389134" method="true" symbol="setText"/>
<entry id="8389255" method="true" symbol="setDeviceConfig"/>
<entry id="8388909" method="true" symbol="getInfo"/>
<entry field="true" id="8388874" symbol="SUB_SPORT_CHALLENGE"/>
<entry field="true" id="8389056" symbol="SWITCH_VIEW"/>
<entry field="true" id="8388869" symbol="SUB_SPORT_FLEXIBILITY_TRAINING"/>
<entry field="true" id="8389386" symbol="FONT_NUMBER_MEDIUM"/>
<entry id="8389367" symbol="&lt;slo&gt;"/>
<entry id="8389345" symbol="rezId"/>
<entry field="true" id="8389485" symbol="lastTimestamp"/>
<entry id="8388647" module="true" symbol="UserProfile"/>
<entry field="true" id="8389011" symbol="CLICK_TYPE_TAP"/>
<entry field="true" id="8388953" symbol="SENSOR_FOOTPOD"/>
<entry field="true" id="8389071" symbol="BEHAVIOR_NONE"/>
<entry id="8388623" module="true" symbol="Toybox_Sensor"/>
<entry id="8389397" object="true" symbol="DeviceSettings"/>
<entry id="8389476" symbol="mDeviceNumber"/>
<entry id="8388781" method="true" symbol="hashCode"/>
<entry id="8389317" symbol="degrees"/>
<entry id="8388636" module="true" symbol="Attention"/>
<entry field="true" id="8389531" symbol="antfsSupport"/>
<entry id="8388691" object="true" symbol="TimerStop"/>
<entry field="true" id="8388972" symbol="TONE_LOUD_BEEP"/>
<entry field="true" id="8389140" symbol="GENDER_MALE"/>
<entry id="8389539" symbol="mInitialText"/>
<entry field="true" id="8388965" symbol="heading"/>
<entry id="8388787" method="true" symbol="equals"/>
<entry field="true" id="8389144" symbol="gender"/>
<entry field="true" id="8389211" symbol="MSG_ID_CLOSE_CHANNEL"/>
<entry id="8389107" method="true" symbol="setBitmap"/>
<entry id="8388883" method="true" symbol="discard"/>
<entry field="true" id="8389487" symbol="state"/>
<entry id="8389353" symbol="&lt;dan&gt;"/>
<entry field="true" id="8388840" symbol="SPORT_TRAINING"/>
<entry field="true" id="8388981" symbol="TONE_SUCCESS"/>
<entry id="8389514" method="true" symbol="getCalculatedWheelDistance"/>
<entry id="8388985" method="true" symbol="playTone"/>
<entry field="true" id="8388736" symbol="currentLocation"/>
<entry field="true" id="8388916" symbol="startOfDay"/>
<entry field="true" id="8388752" symbol="maxCadence"/>
<entry id="8389338" symbol="minute"/>
<entry id="8389086" symbol="mProgressValue"/>
<entry field="true" id="8389199" symbol="MSG_ID_CHANNEL_ID"/>
<entry field="true" id="8388836" symbol="SPORT_BASKETBALL"/>
<entry id="8388626" module="true" symbol="Toybox_UserProfile"/>
<entry id="8388898" method="true" symbol="cos"/>
<entry id="8389282" method="true" symbol="getProperty"/>
<entry id="8389096" symbol="Toybox_WatchUi_Menu"/>
<entry id="8388680" method="true" symbol="testIncr"/>
<entry field="true" id="8389147" symbol="runningStepLength"/>
<entry id="8388689" method="true" symbol="testDuration"/>
<entry field="true" id="8389045" symbol="SLIDE_LEFT"/>
<entry id="8389470" method="true" symbol="getProgrammableData"/>
<entry id="8389313" symbol="aMethod"/>
<entry field="true" id="8388866" symbol="SUB_SPORT_STAIR_CLIMBING"/>
<entry id="8389437" object="true" symbol="PedalPowerBalance"/>
<entry field="true" id="8388805" symbol="BLE_REQUEST_CANCELLED"/>
<entry id="8388776" method="true" symbol="toDouble"/>
<entry id="8388825" object="true" symbol="ConnectionListener"/>
<entry id="8388698" method="true" symbol="start"/>
<entry field="true" id="8389454" symbol="WEIGHT_SCALE_ACTIVITY_LEVEL_CNT"/>
<entry field="true" id="8388813" symbol="NETWORK_REQUEST_TIMED_OUT"/>
<entry id="8389323" symbol="may"/>
<entry field="true" id="8388930" symbol="SECONDS_PER_MINUTE"/>
<entry field="true" id="8389266" symbol="DEFAULT_RADIO_FREQUENCY"/>
<entry field="true" id="8389066" symbol="width"/>
<entry id="8389078" method="true" symbol="onNextPage"/>
<entry field="true" id="8389296" symbol="QUALITY_USABLE"/>
<entry id="8389540" method="true" symbol="onTextEntered"/>
<entry field="true" id="8389168" symbol="COLOR_DK_BLUE"/>
<entry field="true" id="8389293" symbol="QUALITY_NOT_AVAILABLE"/>
<entry field="true" id="8388739" symbol="averageSpeed"/>
<entry field="true" id="8388754" symbol="swimSwolf"/>
<entry id="8388794" method="true" symbol="values"/>
<entry id="8389059" object="true" symbol="Bitmap"/>
<entry id="8388785" symbol="mHigh"/>
<entry id="8389424" object="true" symbol="DeviceState"/>
<entry field="true" id="8388937" symbol="day_of_week"/>
<entry id="8389299" method="true" symbol="parse"/>
<entry id="8388645" module="true" symbol="Time"/>
<entry id="8389111" symbol="mY"/>
<entry field="true" id="8389009" symbol="ANIM_TYPE_EASE_IN_OUT"/>
<entry id="8389110" symbol="mX"/>
<entry field="true" id="8388812" symbol="INVALID_HTTP_METHOD_IN_REQUEST"/>
<entry id="8389182" method="true" symbol="drawRoundedRectangle"/>
<entry field="true" id="8389297" symbol="QUALITY_GOOD"/>
<entry field="true" id="8389472" symbol="rightTorqueEffectiveness"/>
<entry field="true" id="8389228" symbol="MSG_CODE_EVENT_QUE_OVERFLOW"/>
<entry field="true" id="8388832" symbol="SPORT_CYCLING"/>
<entry field="true" id="8389001" symbol="KEY_LEFT"/>
<entry field="true" id="8388745" symbol="totalAscent"/>
<entry field="true" id="8389390" symbol="arrayCount"/>
<entry field="true" id="8388844" symbol="SPORT_SNOWBOARDING"/>
<entry field="true" id="8388730" symbol="startLocation"/>
<entry field="true" id="8389290" symbol="GEO_DM"/>
<entry id="8389243" symbol="flag"/>
<entry id="8388783" method="true" symbol="toString"/>
<entry id="8389328" symbol="october"/>
<entry field="true" id="8388995" symbol="KEY_ESC"/>
<entry field="true" id="8389072" symbol="BEHAVIOR_NEXT_PAGE"/>
<entry field="true" id="8389484" symbol="identificationString"/>
<entry field="true" id="8389075" symbol="BEHAVIOR_ON_BACK"/>
<entry id="8389097" method="true" symbol="onKey"/>
<entry field="true" id="8389265" symbol="DEFAULT_MESSAGE_PERIOD"/>
<entry id="8389133" method="true" symbol="setJustification"/>
<entry field="true" id="8388966" symbol="TONE_KEY"/>
<entry id="8389511" method="true" symbol="getCalculatedCrankCadence"/>
<entry field="true" id="8389220" symbol="MSG_CODE_EVENT_TRANSFER_TX_COMPLETED"/>
<entry field="true" id="8389294" symbol="QUALITY_LAST_KNOWN"/>
<entry id="8389258" method="true" symbol="release"/>
<entry id="8389122" method="true" symbol="onLayout"/>
<entry field="true" id="8389150" symbol="activityClass"/>
<entry id="8389254" method="true" symbol="getDeviceConfig"/>
<entry id="8389233" object="true" symbol="ChannelAssignment"/>
<entry id="8388628" module="true" symbol="Toybox_Ant"/>
<entry id="8389090" object="true" symbol="MenuItem"/>
<entry field="true" id="8389271" symbol="radioFrequency"/>
<entry field="true" id="8389016" symbol="SWIPE_RIGHT"/>
<entry field="true" id="8389161" symbol="COLOR_RED"/>
<entry id="8388704" method="true" symbol="getCallback"/>
<entry field="true" id="8388743" symbol="averagePower"/>
<entry field="true" id="8388979" symbol="TONE_DISTANCE_ALERT"/>
<entry id="8388897" method="true" symbol="atan"/>
<entry field="true" id="8389160" symbol="COLOR_BLACK"/>
<entry field="true" id="8388849" symbol="SPORT_PADDLING"/>
<entry id="8389121" method="true" symbol="findDrawableById"/>
<entry field="true" id="8389315" symbol="longitude"/>
<entry field="true" id="8389518" symbol="wheelDistance"/>
<entry id="8389308" method="true" symbol="toRadians"/>
<entry id="8389083" method="true" symbol="onPreviousMode"/>
<entry field="true" id="8389474" symbol="leftOrCombinedPedalSmoothness"/>
<entry id="8389286" method="true" symbol="loadProperties"/>
<entry field="true" id="8388863" symbol="SUB_SPORT_TRACK_CYCLING"/>
<entry field="true" id="8388733" symbol="timerTime"/>
<entry field="true" id="8388755" symbol="swimEfficency"/>
<entry id="8388935" method="true" symbol="duration"/>
<entry field="true" id="8389263" symbol="DEFAULT_DEVICE_TYPE"/>
<entry id="8388728" method="true" symbol="getActivityInfo"/>
<entry field="true" id="8388751" symbol="averageCadence"/>
<entry field="true" id="8389473" symbol="separatePedalSmoothnessSupport"/>
<entry field="true" id="8388697" symbol="timer2"/>
<entry id="8389326" symbol="august"/>
<entry field="true" id="8388696" symbol="timer1"/>
<entry field="true" id="8388992" symbol="KEY_ZIN"/>
<entry id="8388902" method="true" symbol="sin"/>
<entry id="8389068" method="true" symbol="draw"/>
<entry id="8388879" object="true" symbol="Session"/>
<entry field="true" id="8389269" symbol="DEFAULT_THRESHOLD"/>
<entry field="true" id="8389226" symbol="MSG_CODE_TRANSFER_IN_PROGRESS"/>
<entry field="true" id="8389040" symbol="NUMBER_PICKER_BIRTH_YEAR"/>
<entry id="8388632" symbol="&lt;init&gt;"/>
<entry id="8388671" method="true" symbol="testShiftR"/>
<entry id="8388667" method="true" symbol="testBitwiseAnd"/>
<entry id="8388922" method="true" symbol="now"/>
<entry id="8388780" method="true" symbol="invoke"/>
<entry field="true" id="8388847" symbol="SPORT_HIKING"/>
<entry id="8388670" method="true" symbol="testShiftL"/>
<entry id="8388658" method="true" symbol="testSubstringAndFind"/>
<entry id="8389488" symbol="DEVICE_TYPE_WEIGHT_SCALE"/>
<entry id="8389179" method="true" symbol="drawEllipse"/>
<entry field="true" id="8389379" symbol="OBSCURE_LEFT"/>
<entry id="8388820" object="true" symbol="MailboxIterator"/>
<entry field="true" id="8388917" symbol="FORMAT_SHORT"/>
<entry id="8388791" method="true" symbol="remove"/>
<entry field="true" id="8389292" symbol="GEO_MGRS"/>
<entry field="true" id="8389003" symbol="KEY_UP"/>
<entry id="8388782" method="true" symbol="size"/>
<entry id="8388661" method="true" symbol="testBreak"/>
<entry field="true" id="8388915" symbol="isSleepMode"/>
<entry id="8389022" object="true" symbol="InputEvent"/>
<entry field="true" id="8389452" symbol="WEIGHT_SCALE_ACTIVITY_LEVEL_6"/>
<entry field="true" id="8389451" symbol="WEIGHT_SCALE_ACTIVITY_LEVEL_5"/>
<entry id="8388711" method="true" symbol="println"/>
<entry field="true" id="8389450" symbol="WEIGHT_SCALE_ACTIVITY_LEVEL_4"/>
<entry field="true" id="8389449" symbol="WEIGHT_SCALE_ACTIVITY_LEVEL_3"/>
<entry id="8388708" object="true" symbol="BehaviorDelegate"/>
<entry field="true" id="8389448" symbol="WEIGHT_SCALE_ACTIVITY_LEVEL_2"/>
<entry field="true" id="8389447" symbol="WEIGHT_SCALE_ACTIVITY_LEVEL_1"/>
<entry field="true" id="8389446" symbol="WEIGHT_SCALE_ACTIVITY_LEVEL_0"/>
<entry field="true" id="8389387" symbol="FONT_NUMBER_HOT"/>
<entry id="8389373" symbol="&lt;jpn&gt;"/>
<entry id="8388762" object="true" symbol="Boolean"/>
<entry field="true" id="8389164" symbol="COLOR_YELLOW"/>
<entry field="true" id="8388907" symbol="MOVE_BAR_LEVEL_MIN"/>
<entry id="8388674" method="true" symbol="testGreaterThan"/>
<entry id="8389120" symbol="mLayout"/>
<entry id="8388618" module="true" symbol="Toybox_Math"/>
<entry id="8389332" symbol="monday"/>
<entry id="8389343" symbol="minutes"/>
<entry field="true" id="8389214" symbol="MSG_ID_CHANNEL_RESPONSE_EVENT"/>
<entry id="8389356" symbol="&lt;fin&gt;"/>
<entry id="8389276" object="true" symbol="AppBase"/>
<entry id="8389510" symbol="DEVICE_TYPE_BIKE_POWER"/>
<entry field="true" id="8389034" symbol="NUMBER_PICKER_TIME"/>
<entry id="8388646" module="true" object="true" symbol="Timer"/>
<entry id="8389517" method="true" symbol="getTorqueEfficiency"/>
<entry field="true" id="8388806" symbol="BLE_QUEUE_FULL"/>
<entry id="8388770" object="true" symbol="Strings"/>
<entry id="8389092" symbol="mSize"/>
<entry field="true" id="8389067" symbol="height"/>
<entry id="8389480" method="true" symbol="getDeviceNumber"/>
<entry field="true" id="8389302" symbol="LOCATION_DISABLE"/>
<entry field="true" id="8389162" symbol="COLOR_DK_RED"/>
<entry id="8389512" method="true" symbol="getCalculatedPower"/>
<entry field="true" id="8388872" symbol="SUB_SPORT_MATCH"/>
<entry field="true" id="8389456" symbol="WEIGHT_SCALE_STATUS_SEARCHING"/>
<entry id="8389136" method="true" symbol="getKey"/>
<entry id="8388758" object="true" symbol="Number"/>
<entry field="true" id="8389213" symbol="MSG_ID_ACKNOWLEDGED_DATA"/>
<entry field="true" id="8389224" symbol="MSG_CODE_CHANNEL_IN_WRONG_STATE"/>
<entry field="true" id="8389221" symbol="MSG_CODE_EVENT_TRANSFER_TX_FAILED"/>
<entry id="8389309" method="true" symbol="toGeoString"/>
<entry id="8388690" method="true" symbol="testMoment"/>
<entry id="8389024" object="true" symbol="DataField"/>
<entry field="true" id="8389482" symbol="powerSensorType"/>
<entry id="8389062" symbol="mInitialValue"/>
<entry field="true" id="8389471" symbol="leftTorqueEffectiveness"/>
<entry field="true" id="8388991" symbol="KEY_LIGHT"/>
<entry field="true" id="8389139" symbol="GENDER_FEMALE"/>
<entry field="true" id="8389245" symbol="deviceType"/>
<entry field="true" id="8389209" symbol="MSG_ID_RESET_SYSTEM"/>
<entry id="8389490" method="true" symbol="getBasicReading"/>
<entry field="true" id="8388873" symbol="SUB_SPORT_EXERCISE"/>
<entry id="8389117" method="true" symbol="getWidth"/>
<entry id="8389050" method="true" symbol="popView"/>
<entry field="true" id="8389267" symbol="DEFAULT_SEARCH_TIMEOUT_LOW"/>
<entry id="8389102" method="true" symbol="onNumberPicked"/>
<entry field="true" id="8388722" symbol="sec"/>
<entry id="8389195" symbol="mDrawContext"/>
<entry field="true" id="8389196" symbol="MSG_ID_RF_EVENT"/>
<entry field="true" id="8389457" symbol="WEIGHT_SCALE_STATUS_SEARCH_TIMEOUT"/>
<entry id="8389123" method="true" symbol="onShow"/>
<entry field="true" id="8389273" symbol="searchTimeoutHighPriority"/>
<entry id="8389253" symbol="setPayloadWithOffset"/>
<entry field="true" id="8389169" symbol="COLOR_PURPLE"/>
<entry id="8389479" method="true" symbol="getDeviceState"/>
<entry id="8389180" method="true" symbol="drawPoint"/>
<entry id="8389260" method="true" symbol="sendBroadcast"/>
<entry field="true" id="8388862" symbol="SUB_SPORT_HAND_CYCLING"/>
<entry id="8389436" object="true" symbol="CalculatedWheelSpeed"/>
<entry id="8388685" method="true" symbol="testLocationRadians"/>
<entry field="true" id="8388990" symbol="KEY_POWER"/>
<entry field="true" id="8388809" symbol="BLE_CONNECTION_UNAVAILABLE"/>
<entry id="8389438" object="true" symbol="TorqueEfficiency"/>
<entry field="true" id="8389246" symbol="transmissionType"/>
<entry id="8388882" method="true" symbol="save"/>
<entry field="true" id="8389527" symbol="operatingTime"/>
<entry id="8389106" method="true" symbol="getDimensions"/>
<entry id="8388797" method="true" symbol="substring"/>
<entry id="8389275" method="true" symbol="getApp"/>
<entry id="8388779" symbol="mMethod"/>
<entry field="true" id="8389036" symbol="NUMBER_PICKER_TIME_OF_DAY"/>
<entry field="true" id="8389455" symbol="WEIGHT_SCALE_STATUS_DISABLED"/>
<entry id="8389337" symbol="saturday"/>
<entry id="8389513" method="true" symbol="getCalculatedTorque"/>
<entry id="8389481" symbol="setListener"/>
<entry field="true" id="8388975" symbol="TONE_RESET"/>
<entry id="8389466" object="true" symbol="WeightScaleCapabilities"/>
<entry field="true" id="8388954" symbol="SENSOR_HEARTRATE"/>
<entry field="true" id="8389207" symbol="MSG_ID_LIB_CONFIG"/>
<entry id="8389010" object="true" symbol="KeyEvent"/>
<entry field="true" id="8388864" symbol="SUB_SPORT_INDOOR_ROWING"/>
<entry field="true" id="8388845" symbol="SPORT_ROWING"/>
<entry field="true" id="8389030" symbol="CONFIRM_YES"/>
<entry field="true" id="8388753" symbol="swimStrokeType"/>
<entry field="true" id="8388978" symbol="TONE_TIME_ALERT"/>
<entry field="true" id="8389422" symbol="DEVICE_STATE_TRACKING"/>
<entry field="true" id="8388795" method="true" symbol="length"/>
<entry id="8388718" method="true" symbol="error"/>
<entry id="8388817" method="true" symbol="makeJsonRequest"/>
<entry id="8388683" method="true" symbol="testLog"/>
<entry field="true" id="8388913" symbol="stepGoal"/>
<entry id="8388790" method="true" symbol="hasKey"/>
<entry id="8389365" symbol="&lt;por&gt;"/>
<entry field="true" id="8389038" symbol="NUMBER_PICKER_HEIGHT"/>
<entry id="8388702" method="true" symbol="initialize"/>
<entry field="true" id="8389504" symbol="crankCadence"/>
<entry field="true" id="8389291" symbol="GEO_DMS"/>
<entry field="true" id="8388955" symbol="SENSOR_TEMPERATURE"/>
<entry field="true" id="8388894" symbol="E"/>
<entry id="8388707" method="true" symbol="insertWithPut"/>
<entry id="8389131" method="true" symbol="setColor"/>
<entry id="8389091" symbol="mItems"/>
<entry id="8389288" method="true" symbol="validateProperty"/>
<entry id="8388881" method="true" symbol="isRecording"/>
<entry id="8389346" symbol="text"/>
<entry field="true" id="8388749" symbol="maxHeartRate"/>
<entry id="8389181" method="true" symbol="drawRectangle"/>
<entry field="true" id="8389403" symbol="paceUnits"/>
<entry id="8389341" symbol="days"/>
<entry field="true" id="8388977" symbol="TONE_CANARY"/>
<entry field="true" id="8388919" symbol="FORMAT_LONG"/>
<entry field="true" id="8389459" symbol="WEIGHT_SCALE_STATUS_RECEIVING"/>
<entry id="8388903" method="true" symbol="sqrt"/>
<entry id="8389370" symbol="&lt;swe&gt;"/>
<entry id="8388692" object="true" symbol="TimerStart"/>
<entry field="true" id="8389167" symbol="COLOR_BLUE"/>
<entry id="8389340" symbol="years"/>
<entry field="true" id="8389388" symbol="FONT_NUMBER_THAI_HOT"/>
<entry id="8389434" object="true" symbol="CalculatedTorque"/>
<entry id="8389351" symbol="&lt;valyrian&gt;"/>
<entry field="true" id="8389402" symbol="distanceUnits"/>
<entry id="8389492" method="true" symbol="getUserProfile"/>
<entry id="8389021" method="true" symbol="loadResource"/>
<entry id="8388764" method="true" symbol="format"/>
<entry field="true" id="8389428" symbol="BIKE_POWER_SENSOR_TYPE_WHEEL_TORQUE"/>
<entry id="8388880" method="true" symbol="addLap"/>
<entry id="8388660" method="true" symbol="testFetchRegister"/>
<entry id="8389321" symbol="march"/>
<entry field="true" id="8389507" symbol="activityLevel"/>
<entry id="8388640" module="true" symbol="Lang"/>
<entry id="8389333" symbol="tuesday"/>
<entry field="true" id="8389018" symbol="SWIPE_LEFT"/>
<entry id="8388682" method="true" symbol="testNaN"/>
<entry field="true" id="8389444" symbol="WEIGHT_SCALE_GENDER_UNASSIGNED"/>
<entry field="true" id="8389029" symbol="CONFIRM_NO"/>
<entry id="8389125" method="true" symbol="onHide"/>
<entry field="true" id="8388719" symbol="dst"/>
<entry id="8389127" symbol="mText"/>
<entry id="8389025" object="true" symbol="SimpleDataField"/>
<entry id="8389126" method="true" symbol="setLayout"/>
<entry field="true" id="8389274" symbol="searchThreshold"/>
<entry field="true" id="8389431" symbol="BIKE_POWER_SENSOR_TYPE_CNT"/>
</symbolTable>
<localVars/>
<annotations>
<annotationEntry annotation="hasPowerSupport" class="Info" module="Toybox_Activity" symbol="currentPower"/>
<annotationEntry annotation="hasPowerSupport" class="Info" module="Toybox_Activity" symbol="averagePower"/>
<annotationEntry annotation="hasPowerSupport" class="Info" module="Toybox_Activity" symbol="maxPower"/>
<annotationEntry annotation="hasBarometerSupport" class="Info" module="Toybox_Activity" symbol="totalAscent"/>
<annotationEntry annotation="hasBarometerSupport" class="Info" module="Toybox_Activity" symbol="totalDescent"/>
<annotationEntry annotation="hasSwimSupport" class="Info" module="Toybox_Activity" symbol="swimStrokeType"/>
<annotationEntry annotation="hasSwimSupport" class="Info" module="Toybox_Activity" symbol="swimSwolf"/>
<annotationEntry annotation="hasSwimSupport" class="Info" module="Toybox_Activity" symbol="swimEfficency"/>
<annotationEntry annotation="hasSwimSupport" class="Info" module="Toybox_Activity" symbol="averageDistance"/>
<annotationEntry annotation="hasToneSupport" class="Attention" module="Toybox" symbol="playTone"/>
<annotationEntry annotation="hasVibeSupport" class="Attention" module="Toybox" symbol="vibrate"/>
<annotationEntry annotation="hasBacklightSupport" class="Attention" module="Toybox" symbol="backlight"/>
<annotationEntry annotation="property" class="Drawable" module="Toybox_WatchUi" symbol="identifier"/>
<annotationEntry annotation="property" class="Drawable" module="Toybox_WatchUi" symbol="locX"/>
<annotationEntry annotation="property" class="Drawable" module="Toybox_WatchUi" symbol="locY"/>
<annotationEntry annotation="property" class="Drawable" module="Toybox_WatchUi" symbol="width"/>
<annotationEntry annotation="property" class="Drawable" module="Toybox_WatchUi" symbol="height"/>
</annotations>
<functions>
<functionEntry name="getActivityInfo">
<documentation><![CDATA[<div class="description"> To retrieve the current Activity.Info, call getActivityInfo()<br/> Returns  [Activity.Info] The current Activity.Info<br/>    or null if there is no activity running.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getInfo">
<documentation><![CDATA[<div class="description"> Use getInfo() to retrieve the current ActivityMonitor.Info<br/> Returns  [ActivityMonitor.Info] object with current information.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getHistory">
<documentation><![CDATA[<div class="description"> Use getHistory() to retrieve an array of ActivityMonitor.History objects<br/> Returns  [Array] of ActivityMonitor.History objects.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="c"/>
<param id="n"/>
<documentation><![CDATA[<div class="description"> Constructor for the channel object<br/> <div class="param"> c [enum] Channel type specifier</div><br/> @option [CHANNEL_TYPE_TX_NOT_RX] Bidirectional Transmit (Master)<br/> @option [CHANNEL_TYPE_RX_NOT_TX] Bidirectional Receive (Slave)<br/> <div class="param"> n Network</div><br/> @option [NETWORK_PUBLIC] ANT public network<br/> @option [NETWORK_PLUS] ANT+ network<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="options"/>
<documentation><![CDATA[<div class="description"> Constructor for the device config object<br/> <div class="param"> options [Dictionary] initialization options</div><br/> @option [:deviceNumber] ANT-id of the device to search for. Not setting enables a<br/>    wildcard search<br/> @option [:deviceType]  1-Byte device type identifier (See ANT Protocol for pre-defined Device Types)<br/> @option [:transmissionType] Manufacturer-specific transport type and extended device number<br/> @option [:messagePeriod] Message period that the sensor uses<br/> @option [:radioFrequency] Radio frequency that the sensor operates on. Range of 2 to 80.<br/> @option [:searchTimeoutLowPriority] Low Priority search timeout (2.5s increments) that a receiving channel<br/>     will wait for in order to start tracking a master. Range of 0 to 12.<br/> @option [:searchTimeoutHighPriority] High Priority search timeout (2.5s increments) that a receiving channel<br/>     will wait for in order to start tracking a master. Range of 0 to 2.<br/> @option [:searchThreshold] Proximity threshold bin<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="listener"/>
<param id="ca"/>
<documentation><![CDATA[<div class="description"> Constructor for the generic channel<br/> <div class="param"> listener [Method] Method object to call with sensor updates.</div><br/> <div class="param"> ca [ChannelAssignment] ChannelAssignment object for the channel</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getDeviceConfig">
<documentation><![CDATA[<div class="description"> Get the current ANT channel configuration<br/> Returns  [DeviceConfig] DeviceConfig object with current channel device configuration.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setDeviceConfig">
<param id="config"/>
<documentation><![CDATA[<div class="description"> Set the current ANT channel configuration<br/> <div class="param"> config [DeviceConfig] DeviceConfig object to set</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="open">
<documentation><![CDATA[<div class="description"> Open a generic ANT Channel<br/> Returns  [Boolean] true - If successfully opened the channel<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="close">
<documentation><![CDATA[<div class="description"> Close a generic ANT Channel<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="release">
<documentation><![CDATA[<div class="description"> Release the generic ANT Channel back to the system.  If it is open it will be automatically closed.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="sendAcknowledge">
<param id="data"/>
<documentation><![CDATA[<div class="description"> Sends an acknowledge message<br/> <div class="param"> data [Integer] 8 byte data packet</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="sendBroadcast">
<param id="data"/>
<documentation><![CDATA[<div class="description"> Sends a broadcast message<br/> <div class="param"> data [Integer] 8 byte data packet</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getPayload">
<documentation><![CDATA[<div class="description"> Get the ANT data packet<br/> Returns  [Array] Array of integers representing the bytes of the data payload<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setPayload">
<param id="data"/>
<documentation><![CDATA[<div class="description"> Set the ANT data packet.<br/> <div class="param"> data [Array] Array of integers representing the bytes of the data payload</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setPayloadWithOffset">
<param id="data"/>
<param id="offset"/>
<documentation/>
</functionEntry>
<functionEntry name="getApp">
<documentation><![CDATA[<div class="description"> Call getApp() to retrieve the AppBase object that is currently running.<br/> Returns  [AppBase] The currently running AppBase object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onStart">
<param id="state"/>
<documentation><![CDATA[<div class="description"> Before the initial WatchUi.View is retrieved, onStart() is called. This is where app<br/> level settings can be initialized or retrieved from the object store before<br/> the initial View is created. It is also possible to be given a dictionary of state<br/> data, indicating that the app was previously closed with the intention of allowing<br/> it to return to its previous state. The state parameter may be null, indicating that<br/> the app was previously fully stopped.<br/> <div class="param"> state [Dictionary] A Dictionary of values to allow resuming from a previous state</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getInitialView">
<documentation><![CDATA[<div class="description"> To retrieve the initial WatchUi.View and WatchUi.InputDelegate<br/> of the application, call getInitialView(). Providing a WatchUi.InputDelegate<br/> is optional for widgets and watch-apps. For watchfaces and datafields, an<br/> array containing just a WatchUi.View should be returned as input is not available<br/> for these app types.<br/> Returns  [Array] An array containing [ WatchUi.View, WatchUi.InputDelegate (optional) ]<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onStop">
<param id="state"/>
<documentation><![CDATA[<div class="description"> When the system is going to terminate an application, onStop() is called.<br/> If the application needs to save state to the object store it should be<br/> done in this function. If the state parameter is not null, then the app is<br/> being suspended with the intention of starting again. This allows for the<br/> app to be restored to its previous state. This state is separate from the object<br/> store in that this data will only be available if the app is resumed.<br/> <div class="param"> state [Dictionary] A Dictionary to store the current app state</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getProperty">
<param id="key"/>
<documentation><![CDATA[<div class="description"> To get the data associated with the given key from the object store, use getProperty().<br/> <div class="param"> key Key of the value to retrieve from the object store (cannot be a Symbol)</div><br/> Returns  [Object] Content associated with the key, or null if the key is not in the object store<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setProperty">
<param id="key"/>
<param id="value"/>
<documentation><![CDATA[<div class="description"> Using a key, store the given data in the object by calling setProperty().<br/> Keys can be of type String, Number, Float, and Boolean.<br/> Values can be of type String, Number, Float, Boolean, null, and Arrays or Dictionaries containing those types.<br/> There is a limit on the size of the Properties of 8KB. If you reach this limit, the properties will not be<br/> saved or reloaded.<br/> <div class="param"> key The key used to store and retrieve the value from the object store (cannot be a Symbol)</div><br/> <div class="param"> value The value to put into the object store</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="deleteProperty">
<param id="key"/>
<documentation><![CDATA[<div class="description"> Deletes the given key from the object store.<br/> <div class="param"> key The key to delete</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="clearProperties">
<documentation><![CDATA[<div class="description"> Clears the object store for the application.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="loadProperties">
<documentation/>
</functionEntry>
<functionEntry name="saveProperties">
<documentation/>
</functionEntry>
<functionEntry name="validateProperty">
<param id="key"/>
<param id="value"/>
<documentation/>
</functionEntry>
<functionEntry name="playTone">
<param id="tone"/>
<documentation><![CDATA[<div class="description"> Play a tone.<br/> <div class="param"> tone TONE_XXX value to play</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="dutyCycleVal"/>
<param id="lengthVal"/>
<documentation/>
</functionEntry>
<functionEntry name="vibrate">
<param id="vibe"/>
<documentation><![CDATA[<div class="description"> Use the vibe motor<br/> <div class="param"> [Array] vibe Array of VibeProfile objects to play in sequence. Maximum of 8 supported.</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="backlight">
<param id="onOff"/>
<documentation><![CDATA[<div class="description"> Turn on or off the backlight.<br/> <div class="param"> [Boolean] onOff true to turn on backlight, false otherwise.</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="makeJsonRequest">
<param id="url"/>
<param id="request"/>
<param id="options"/>
<param id="responseCallback"/>
<documentation><![CDATA[<div class="description"> To use Garmin Connect Mobile as a proxy to the web, use makeJsonRequest().<br/> The request is asynchronous; the responseCallback will be called when the request returns.<br/> <div class="param"> [String] url The URL being requested</div><br/> <div class="param"> [Dictionary] request Dictionary of keys and values, appended to the URL as a GET request. Can be null.</div><br/> <div class="param"> [Dictionary] options Dictionary of options. Can be null. makeJsonRequest does not currently support any options.  Future options are TBD.</div><br/> <div class="param"> [Method] responseCallback This is a callback in the format function responseCallback(responseCode, data);</div><br/>     responseCode has the server response code, and data contains a Dictionary of content if the request was successful.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="makeJsonRequestNative">
<param id="url"/>
<param id="request"/>
<param id="options"/>
<param id="responseCallback"/>
<documentation/>
</functionEntry>
<functionEntry name="makeImageRequest">
<param id="url"/>
<param id="options"/>
<param id="responseCallback"/>
<documentation><![CDATA[<div class="description"> To request an image through Garmin Connect Mobile, call makeImageRequest(). GCM<br/> will scale and dither the image based on the capabilities of the device, but<br/> the user will be able to pass additional options (like dithering it down to a<br/> one color image)<br/> <div class="param"> [String] url URL of image to request</div><br/> <div class="param"> [Dictionary] options Additional image options (TBD)</div><br/> <div class="param"> [Method] responseCallback This is a callback in the format function responseCallback(responseCode, data);</div><br/>      responseCode has the server response code, and data contains a WatchUi.Bitmap if it was successful.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="next">
<documentation><![CDATA[<div class="description"> Call next() to get the next message from the mailbox.<br/> Returns  Message content, or null if no messages<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getMailbox">
<documentation><![CDATA[<div class="description"> Call getMailbox() to get the MailboxIterator for this App's mailbox.<br/> Returns  [MailboxIterator] Iterator for the mailbox<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setMailboxListener">
<param id="listener"/>
<documentation><![CDATA[<div class="description"> Add a listener for mailbox events.  The listener method is called whenever a<br/> new message is received<br/> <div class="param"> [Method] listener Callback in the format function listener(iterator) where iterator is the mailbox iterator for the app</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="emptyMailbox">
<documentation><![CDATA[<div class="description"> To clear the contents of the mailbox, call emptyMailbox().<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="transmit">
<param id="content"/>
<param id="options"/>
<param id="listener"/>
<documentation><![CDATA[<div class="description"> Send data across the the BLE link.<br/> <div class="param"> [Object] content The object to be sent</div><br/> <div class="param"> [Dictionary] options Additional transmit options (TBD)</div><br/> <div class="param"> [ConnectionListener] listener An extension of the ConnectionListener class</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onError">
<documentation><![CDATA[<div class="description"> Callback when a communications operation error occurs.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onComplete">
<documentation><![CDATA[<div class="description"> Callback when a communications operation completes.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="createSession">
<param id="options"/>
<documentation><![CDATA[<div class="description"> Use createSession() to create a session object with options determined by the caller.<br/> Only one session object is allowed to exist at a time. If there<br/> is an existing object that has not been closed using the save() or<br/> discard() methods, this method will return that object instead of creating a new one.<br/> <div class="param"> [Dictionary] options A Dictionary containing session creation options</div><br/> @option options :sport The primary sport being recorded (SPORT_GENERIC by default)<br/> @option options :subSport The sport subcategory being recorded (SUB_SPORT_GENERIC by default)<br/> @option options [String] :name This is the name that will be associated with the sport being recorded and is a required option.<br/> Returns  [Session] A new session object, or the existing session object if a session is active and has not been saved or discarded<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<documentation><![CDATA[<div class="description"> There is no public constructor; Session objects must be created with createSession().<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="start">
<documentation><![CDATA[<div class="description"> To begin recording a FIT file on the system, start() should be called.<br/> Returns  [Boolean] true if recording was successfully started, or false if it could not be started<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="stop">
<documentation><![CDATA[<div class="description"> To stop recording a FIT file on the system, stop() should be called.<br/> Returns  [Boolean] true if recording was successfully stopped, or false if it could not be stopped<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="addLap">
<documentation><![CDATA[<div class="description"> Add a lap to the current recording by calling addLap().<br/> Returns  [Boolean] true if a lap was successfully created, or false if a lap could not be created<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="isRecording">
<documentation><![CDATA[<div class="description"> Use isRecording() to check if recording is active for this session.<br/> Returns  [Boolean] true if recording is active, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="save">
<documentation><![CDATA[<div class="description"> After recording is complete, the save() method will complete the session by storing the FIT file on the file system.<br/> Returns  [Boolean] true if the session was succesfully saved, or false if it was unable to save<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="discard">
<documentation><![CDATA[<div class="description"> After recording is complete, the discard() method will complete the session by discarding the recorded data.<br/> Returns  [Boolean] true if the session was succesfully discarded, else false<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="next">
<documentation><![CDATA[<div class="description"> Go to the next point.<br/> Returns  [Boolean] true if there is a next point, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="get">
<documentation><![CDATA[<div class="description"> Get the location object of the current point.<br/> Returns  [Location] Location object from cache<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getGeometry">
<documentation><![CDATA[<div class="description"> Get a GeometryIterator for the session. Call get() to retrieve<br/> the Location. Use next() to iterate to the next point. It is<br/> important that the geometryIterator doesn't persist as this locks<br/> down the ActivityRecording. Use it to iterate the points and then<br/> let it go. If there are no points, null is returned.<br/> Returns  [GeometryIterator] A geometry iterator for the session or null<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<documentation/>
</functionEntry>
<functionEntry name="clear">
<documentation><![CDATA[<div class="description"> Erase the screen using the background color by calling clear().<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="drawCircle">
<param id="x"/>
<param id="y"/>
<param id="radius"/>
<documentation><![CDATA[<div class="description"> Use drawCircle() to draw a circle around a point.<br/> <div class="param"> [Number] x X location of circle center</div><br/> <div class="param"> [Number] y Y location of circle center</div><br/> <div class="param"> [Number] radius Radius of circle</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="drawEllipse">
<param id="x"/>
<param id="y"/>
<param id="a"/>
<param id="b"/>
<documentation><![CDATA[<div class="description"> Use drawEllispe() to draw an ellipse around a point.<br/> <div class="param"> [Number] x X location of ellipse center</div><br/> <div class="param"> [Number] y Y location of ellipse center</div><br/> <div class="param"> [Number] a A value of ellipse</div><br/> <div class="param"> [Number] b B value of ellipse</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="drawPoint">
<param id="x"/>
<param id="y"/>
<documentation><![CDATA[<div class="description"> Draw a point on the screen with drawPoint().<br/> <div class="param"> [Number] x X location of point</div><br/> <div class="param"> [Number] y Y location of point</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="drawRectangle">
<param id="x"/>
<param id="y"/>
<param id="width"/>
<param id="height"/>
<documentation><![CDATA[<div class="description"> Draw a rectangle with drawRectangle().<br/> <div class="param"> [Number] x X location of upper corner</div><br/> <div class="param"> [Number] y Y location of upper corner</div><br/> <div class="param"> [Number] width Width value of rectangle</div><br/> <div class="param"> [Number] height Height value of rectangle</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="drawRoundedRectangle">
<param id="x"/>
<param id="y"/>
<param id="width"/>
<param id="height"/>
<param id="radius"/>
<documentation><![CDATA[<div class="description"> Draw a rounded rectangle with drawRoundedRectangle().<br/> <div class="param"> [Number] x X location of upper corner</div><br/> <div class="param"> [Number] y Y location of upper corner</div><br/> <div class="param"> [Number] width Width value of rectangle</div><br/> <div class="param"> [Number] height Height value of rectangle</div><br/> <div class="param"> [Number] radius Radius of rounding.</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="drawBitmap">
<param id="x"/>
<param id="y"/>
<param id="rez_id"/>
<documentation><![CDATA[<div class="description"> Draw a bitmap to the screen with drawBitmap().<br/> <div class="param"> [Number] x Top left X coordinate to begin the draw</div><br/> <div class="param"> [Number] y Top left Y coordinate to begin the draw</div><br/> <div class="param"> [Symbol] rez_id Rez.id of bitmap</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="drawLine">
<param id="x1"/>
<param id="y1"/>
<param id="x2"/>
<param id="y2"/>
<documentation><![CDATA[<div class="description"> Draw a line between two points using drawLine().<br/> <div class="param"> [Number] x1 First x coord</div><br/> <div class="param"> [Number] y1 First y coord</div><br/> <div class="param"> [Number] x2 Second x coord</div><br/> <div class="param"> [Number] y2 Second y coord</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="fillCircle">
<param id="x"/>
<param id="y"/>
<param id="radius"/>
<documentation><![CDATA[<div class="description"> Fill a circle with the foreground color using fillCircle().<br/> <div class="param"> [Number] x X location of circle center</div><br/> <div class="param"> [Number] y Y location of circle center</div><br/> <div class="param"> [Number] radius Radius of circle</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="fillEllipse">
<param id="x"/>
<param id="y"/>
<param id="a"/>
<param id="b"/>
<documentation><![CDATA[<div class="description"> Fill an ellipse with the foreground color using fillEllipse().<br/> <div class="param"> [Number] x X location of ellipse center</div><br/> <div class="param"> [Number] y Y location of ellipse center</div><br/> <div class="param"> [Number] a A value of ellipse</div><br/> <div class="param"> [Number] b B value of ellipse</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="fillPolygon">
<param id="pts"/>
<documentation><![CDATA[<div class="description"> To fill a polygon, use fillPolygon().<br/> <div class="param"> [Array] pts Array of coordinates with a 64 point limit</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="fillRectangle">
<param id="x"/>
<param id="y"/>
<param id="width"/>
<param id="height"/>
<documentation><![CDATA[<div class="description"> Fill a rectangle with the foreground color using fillRectangle().<br/> <div class="param"> [Number] x X location of upper corner</div><br/> <div class="param"> [Number] y Y location of upper corner</div><br/> <div class="param"> [Number] width Width value of rectangle</div><br/> <div class="param"> [Number] height Height value of rectangle</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="fillRoundedRectangle">
<param id="x"/>
<param id="y"/>
<param id="width"/>
<param id="height"/>
<param id="radius"/>
<documentation><![CDATA[<div class="description"> Fill a rounded rectangle with the foreground color using fillRoundedRectangle().<br/> <div class="param"> [Number] x X location of upper corner</div><br/> <div class="param"> [Number] y Y location of upper corner</div><br/> <div class="param"> [Number] width Width value of rectangle</div><br/> <div class="param"> [Number] height Height value of rectangle</div><br/> <div class="param"> [Number] radius Radius of rounding</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="drawText">
<param id="x"/>
<param id="y"/>
<param id="font"/>
<param id="text"/>
<param id="justification"/>
<documentation><![CDATA[<div class="description"> Draw text at the given location using drawText().<br/> <div class="param"> [Number] x X location of text</div><br/> <div class="param"> [Number] y Y location of text</div><br/> <div class="param"> [Number] font Font to use</div><br/> <div class="param"> [Number] text String to render</div><br/> <div class="param"> justification One of the TEXT_JUSTIFY constants</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getTextDimensions">
<param id="text"/>
<param id="font"/>
<documentation><![CDATA[<div class="description"> Get the width and height of a string. This takes new lines into account when<br/> determining the height. The width is the maximum width for a given line of the string.<br/> If a string has two \n in it, the height would be for three lines and the width would be the<br/> width of the longest string.<br/> <div class="param"> [String] text Text to get width for</div><br/> <div class="param"> font FONT constant or font resource of text</div><br/> Returns  [Array] [width, height] of string in pixels<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setColor">
<param id="foreground"/>
<param id="background"/>
<documentation><![CDATA[<div class="description"> Use setColor() to set the current foreground and background colors.<br/> <div class="param"> foreground COLOR constant</div><br/> <div class="param"> background COLOR constant</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setPenWidth">
<param id="width"/>
<documentation><![CDATA[<div class="description"> Use setPenWidth() to set the width of a line<br/> <div class="param"> [Number] width in pixels</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getWidth">
<documentation><![CDATA[<div class="description"> Use getWidth() to get the width of the display.<br/> Returns  [Number] Width of display<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getHeight">
<documentation><![CDATA[<div class="description"> Use getHeight() to get the height of the display.<br/> Returns  [Number] Height of display<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getTextWidthInPixels">
<param id="text"/>
<param id="font"/>
<documentation><![CDATA[<div class="description"> Get the width of a string with getTextWidthInPixels().<br/> <div class="param"> [String] text Text to get width for</div><br/> <div class="param"> font FONT constant or font resource of text</div><br/> Returns  [Number] Width of string in pixels<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getFontHeight">
<param id="font"/>
<documentation><![CDATA[<div class="description"> Get The Font Height by using getFontHeight().<br/> <div class="param"> [Number] font Font to use</div><br/> Returns  [Number] The height of font<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toString">
<documentation><![CDATA[<div class="description"> Use toString to convert an Object to a String.<br/> Returns  [String] The String representation of the object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="method">
<param id="symbol"/>
<documentation><![CDATA[<div class="description"> To retrieve the callback to the given method, use method(). This takes<br/> a Symbol and returns the associated Method object.<br/> <div class="param"> [Symbol] symbol Symbol of the method requested</div><br/> Returns  [Method] Method object associated with the given method symbol<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="hashCode">
<documentation><![CDATA[<div class="description"> Use hashCode() to return a hash code value for the object.<br/> Returns  [Number] Hash code for the object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="equals">
<param id="that"/>
<documentation><![CDATA[<div class="description"> Test if this instance is equal to another instance of an object by using equals().<br/> <div class="param"> that That item to test against</div><br/> Returns  [Boolean] true if objects are equal, false otherwise.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="abs">
<documentation><![CDATA[<div class="description"> Use abs() to get the Absolute value of the Number.<br/> Returns  [Number] Absolute value of the Number<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toNumber">
<documentation><![CDATA[<div class="description"> Convert to a Number with toNumber().<br/> Returns  [Number] A Number object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toFloat">
<documentation><![CDATA[<div class="description"> Convert the Number to a Float with toFloat().<br/> Returns  [Float] A Float object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toLong">
<documentation><![CDATA[<div class="description"> Convert the Number to a Long with toLong().<br/> Returns  [Long] A Long object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toDouble">
<documentation><![CDATA[<div class="description"> Convert the Number to a Double with toDouble().<br/> Returns  [Double] A Double object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="format">
<param id="format"/>
<documentation><![CDATA[<div class="description"> Use format() to format the Number using the given formatting String.<br/> The format string is similar to the format string that can be<br/> passed in to printf in c stdio (minus [length]):<br/>    "%[flags][width][.precision]specifier"<br/> The supported specifiers are: d, i, u, o, x, X, f, e, E, g, G.<br/> For more details on each of these, please see<br/> http://www.cplusplus.com/reference/cstdio/printf/<br/><br/> Returns  [String] A formatted String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<documentation/>
</functionEntry>
<functionEntry name="abs">
<documentation><![CDATA[<div class="description"> Use abs() to get the Absolute value of the Long.<br/> Returns  [Long] Absolute value of the Long<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toLong">
<documentation><![CDATA[<div class="description"> Convert to a Long with toLong().<br/> Returns  [Long] A Long object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toNumber">
<documentation><![CDATA[<div class="description"> Convert the Long to a Number with toNumber().<br/> Returns  [Number] A Number object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toFloat">
<documentation><![CDATA[<div class="description"> Convert the Long to a Float with toFloat().<br/> Returns  [Float] A Float object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toDouble">
<documentation><![CDATA[<div class="description"> Convert the Long to a Double with toDouble().<br/> Returns  [Double] A Double object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="format">
<param id="format"/>
<documentation><![CDATA[<div class="description"> Use format() to format the Long using the given formatting String.<br/> The format string is very similar to the format string that can be<br/> passed in to printf in c stdio (minus [length]):<br/>    "%[flags][width][.precision]specifier"<br/> The supported specifiers are: d, i, u, o, x, X, f, e, E, g, G.<br/> For more details on each of these, please see<br/> http://www.cplusplus.com/reference/cstdio/printf/<br/><br/> Returns  [String] A formatted String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toString">
<documentation><![CDATA[<div class="description"> Convert a Long to a String with toString().<br/> Returns  [String] The String representation of the Long<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toFloat">
<documentation><![CDATA[<div class="description"> Convert to a Float with toFloat().<br/> Returns  [Float] A Float object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="abs">
<documentation><![CDATA[<div class="description"> Use abs() to get the Absolute value of the Float.<br/> Returns  [Float] Absolute value of the Float<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toNumber">
<documentation><![CDATA[<div class="description"> Convert the Float to a Number with toNumber().<br/> Since the number is a float the value will be rounded<br/> toward 0. For example, 6.8 becomes 6 and -5.7 becomes -5.<br/> Returns  [Number] A Number object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toDouble">
<documentation><![CDATA[<div class="description"> Convert the Float to a Double with toDouble().<br/> Returns  [Double] A Double object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toLong">
<documentation><![CDATA[<div class="description"> Convert the Float to a Long with toLong().<br/> Returns  [Long] A Long object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="format">
<param id="format"/>
<documentation><![CDATA[<div class="description"> Use format() to format the Float using the given formatting String.<br/> The format string is very similar to the format string that can be<br/> passed in to printf in c stdio (minus [length]):<br/>    "%[flags][width][.precision]specifier"<br/> The supported specifiers are: d, i, u, o, x, X, f, e, E, g, G.<br/> For more details on each of these, please see<br/> http://www.cplusplus.com/reference/cstdio/printf/<br/><br/> Returns  [String] A formatted String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<documentation/>
</functionEntry>
<functionEntry name="abs">
<documentation><![CDATA[<div class="description"> Use abs() to get the Absolute value of the Double.<br/> Returns  [Double] Absolute value of the Double<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toDouble">
<documentation><![CDATA[<div class="description"> Convert to a Double with toDouble().<br/> Returns  [Double] A Double object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toNumber">
<documentation><![CDATA[<div class="description"> Convert the Double to a Number with toNumber().<br/> Since the number is a double the value will be rounded<br/> toward 0. For example, 6.8 becomes 6 and -5.7 becomes -5.<br/> Returns  [Number] A Number object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toFloat">
<documentation><![CDATA[<div class="description"> Convert the Double to a Float with toFloat().<br/> Returns  [Float] A Float object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toLong">
<documentation><![CDATA[<div class="description"> Convert the Double to a Long with toLong().<br/> Returns  [Long] A Long object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="format">
<param id="format"/>
<documentation><![CDATA[<div class="description"> Use format() to format the Double using the given formatting String.<br/> The format string is very similar to the format string that can be<br/> passed in to printf in c stdio (minus [length]):<br/>    "%[flags][width][.precision]specifier"<br/> The supported specifiers are: d, i, u, o, x, X, f, e, E, g, G.<br/> For more details on each of these, please see<br/> http://www.cplusplus.com/reference/cstdio/printf/<br/><br/> Returns  [String] A formatted String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toString">
<documentation><![CDATA[<div class="description"> Convert a Double to a String with toString().<br/> Returns  [String] The String representation of the object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toNumber">
<documentation><![CDATA[<div class="description"> If a string is in numeric form, either "123" or "0x12AB", convert it to a Number object with toNumber().<br/> Returns  [Number] A Number object, or error<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toFloat">
<documentation><![CDATA[<div class="description"> If a string is in the numeric form of "123" or "123.45", convert it to a Float object with toFloat().<br/> Returns  [Float] A Float object, or error<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="hashCode">
<documentation><![CDATA[<div class="description"> Use hasCode() to get a hash code value for the String.<br/> Returns  [Number] Hash code for the String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="length">
<documentation><![CDATA[<div class="description"> Use length() to get the number of characters in the String<br/> Returns  [Number] The length of the String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="equals">
<param id="that"/>
<documentation><![CDATA[<div class="description"> Test if this instance is equal to another instance of an Object with equals().<br/> <div class="param"> that That item to test against</div><br/> Returns  [Boolean] true if the objects are equal, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="find">
<param id="string"/>
<documentation><![CDATA[<div class="description"> Use find() to determine if the passed String exists in this String.<br/> <div class="param"> [String] string String to find</div><br/> Returns  [Number] index Index of the start of string or null if not found<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="substring">
<param id="startIndex"/>
<param id="endIndex"/>
<documentation><![CDATA[<div class="description"> Use subString() to create a new String that contains the contents of the current string from start position to end position, exclusive.<br/> <div class="param"> [Number] startIndex Zero based start index of the substring</div><br/> <div class="param"> [Number] endIndex End position of the substring, exclusive</div><br/> Returns  [String] The substring of String or null on error<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toLower">
<documentation><![CDATA[<div class="description"> Convert the String to lower case with toLower().<br/> Returns  [String] A new lower case String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toUpper">
<documentation><![CDATA[<div class="description"> Convert the String to upper case with toUpper().<br/> Returns  [String] A new upper case String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toString">
<documentation><![CDATA[<div class="description"> Convert to a String with toString().<br/> Returns  String representation of String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="format">
<param id="format"/>
<param id="params"/>
<documentation><![CDATA[<div class="description"> Use format() to create a formatted String by substituting the given parameters into the given format at the corresponding locations.<br/><br/> The given format:<br/>     "Your next meeting is at $1$:$2$ on $3$ $4$ in room $5$."<br/> Paired with the given parameters:<br/>     [2, 30, "Sep", 4, "6820"]<br/> Would result in the String:<br/>     "Your next meeting is at 2:30 on Sep 4 in room 6820."<br/><br/> <div class="param"> [String] format A string using $1$, $2$, $3$... as substitution identifiers</div><br/> <div class="param"> params [Array] Array of content to substitute in</div><br/> Returns  [String] A new String with the substituted content<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toString">
<documentation><![CDATA[<div class="description"> Convert a Symbol to a String with toString().<br/> Returns  [String] The String representation of the Symbol<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="size">
<documentation><![CDATA[<div class="description"> Use size() to get the size of the Array.<br/> Returns  [Number] The number of elements in Array<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toString">
<documentation><![CDATA[<div class="description"> Convert the array to a String representation with toString().<br/> Each elements' toString() method will be invoked.<br/> Returns  [String] The String representation of the Array<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="aClass"/>
<param id="aMethod"/>
<documentation><![CDATA[<div class="description"> Constructor<br/> <div class="param"> aClass Classdef of method</div><br/> <div class="param"> [Symbol] aMethod Symbol of class object</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="invoke">
<documentation><![CDATA[<div class="description"> Invoke the method with invoke().<br/> <div class="param"> ... parameters</div><br/> Returns  [Object] The return value from callback<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="hashCode">
<documentation><![CDATA[<div class="description"> Use hashCode() to get a hash code value for the Method.<br/> Returns  [Number] Hash code for the Method<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="put">
<param id="key"/>
<param id="value"/>
<documentation><![CDATA[<div class="description"> Use put() to place a value in the hash table with the given key.<br/> <div class="param"> key Key of the hash map</div><br/> <div class="param"> value Value to put in the hash map</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="get">
<param id="key"/>
<documentation><![CDATA[<div class="description"> Use get() to retrieve a value for a given key.<br/> <div class="param"> key to retrieve</div><br/> Returns  [Object] Value for key, or null if does not exist<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="hasKey">
<param id="key"/>
<documentation><![CDATA[<div class="description"> Check if the given key exists with hasKey().<br/> <div class="param"> key Key to check for</div><br/> Returns  [Boolean] true if key exists, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="remove">
<param id="key"/>
<documentation><![CDATA[<div class="description"> Use remove() to delete an item from the hash table.<br/> <div class="param"> key to remove</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="size">
<documentation><![CDATA[<div class="description"> Use size() to retrieve the number of elements in the Dictionary.<br/> Returns  [Number] The number of elements in Dictionary<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="isEmpty">
<documentation><![CDATA[<div class="description"> Use isEmpty() to determine it the Dictionary is empty.<br/> Returns  [Boolean] true if empty, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="keys">
<documentation><![CDATA[<div class="description"> Use keys() to retrieve the keys in the Dictionary.<br/> Returns  [Array] Array of keys in the Dictionary<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="values">
<documentation><![CDATA[<div class="description"> Use value() to retrieve the values in the Dictionary.<br/> Returns  [Array] Array of values in the Dictionary<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toString">
<documentation><![CDATA[<div class="description"> Convert to a String with toString().<br/> Returns  String representation of dictionary<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="acos">
<param id="x"/>
<documentation><![CDATA[<div class="description"> Use acos() to get the arc cosine of a cosine.<br/> <div class="param"> [Float] x The cosine value</div><br/> Returns  [Float] 0..PI in radians, or NaN if invalid<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="asin">
<param id="x"/>
<documentation><![CDATA[<div class="description"> Use asin() to get the arc sine of a sine.<br/> <div class="param"> [Float] x The sine value</div><br/> Returns  [Float] 0..PI in radians, or NaN if invalid<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="atan">
<param id="x"/>
<documentation><![CDATA[<div class="description"> Use atan() to get the arc tangent of a tangent.<br/> <div class="param"> [Float] x The tangent value</div><br/> Returns  [Float] 0..PI in radians, or NaN if invalid<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="cos">
<param id="x"/>
<documentation><![CDATA[<div class="description"> Use cos() to get the cosine of an angle.<br/> <div class="param"> [Float] x The angle in radians</div><br/> Returns  [Float] Cosine value<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="log">
<param id="x"/>
<param id="base"/>
<documentation><![CDATA[<div class="description"> Use log() to get logarithmic value of a value.<br/> <div class="param"> [Float] x The value for which to get logarithm</div><br/> <div class="param"> [Float] base Optional base value (E is assumed)</div><br/> Returns  [Float] Logarithm of x<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="pow">
<param id="x"/>
<param id="y"/>
<documentation><![CDATA[<div class="description"> Use pow() to calculate x to the power of y.<br/> <div class="param"> [Float] x Base</div><br/> <div class="param"> [Float] y Exponent</div><br/> Returns  [Float] x to the power of y<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="rand">
<documentation><![CDATA[<div class="description"> Use rand() to get a random number.<br/> Returns  [Number] Non-negative random number<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="sin">
<param id="x"/>
<documentation><![CDATA[<div class="description"> Use sin() to get the sine of an angle.<br/> <div class="param"> [Float] x The angle in radians</div><br/> Returns  [Float] Sine of X<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="sqrt">
<param id="x"/>
<documentation><![CDATA[<div class="description"> Use sqrt() to calculate the square root of a value.<br/> <div class="param"> [Float] x The value for which to get the square root</div><br/> Returns  [Float] Square root of X, or NaN if invalid<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="srand">
<param id="seed"/>
<documentation><![CDATA[<div class="description"> Use srand() to seed the random number generator.<br/> <div class="param"> [Number] seed The value used for seeding rand()</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="tan">
<param id="x"/>
<documentation><![CDATA[<div class="description"> Use tan() to get the tangent of an angle.<br/> <div class="param"> [Float] x The angle in radians</div><br/> Returns  [Float] Tangent value of x<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="persistLocation">
<param id="location"/>
<param id="options"/>
<documentation><![CDATA[<div class="description"> Save a location to the device's location list<br/> <div class="param"> location [Location] Location object to persist</div><br/> <div class="param"> options [Dictionary] Dictionary of options, or null to accept defaults</div><br/> @option :name [String] Name to assign waypoint. If not specified will be auto-named<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="options"/>
<documentation><![CDATA[<div class="description"> Constructor: create a coordinate based off an options hash table<br/> <div class="param"> [Dictionary] options Hash table of options</div><br/> @option options [Number] :latitude The latitude<br/> @option options [Number] :longitude The longitude<br/> @option options [Symbol] :format The format of lat/long (possible values are :degrees, :radians, or :semicircles)<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toDegrees">
<documentation><![CDATA[<div class="description"> Use toDegrees() to retrieve the coordinate back as an Array of degree values.<br/> Returns  [Array] An Array of the latitude and the longitude in degree format<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toRadians">
<documentation><![CDATA[<div class="description"> Use toRadians() to retrieve the coordinate back as an Array of radian values.<br/> Returns  [Array] An Array of the latitude and the longitude in radian format<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toGeoString">
<param id="format"/>
<documentation><![CDATA[<div class="description"> Use toGeoString() to get a String representation of the coordinate.<br/> <div class="param"> format Coordinate format to which coordinate should be converted (GEO constant)</div><br/> Returns  [String] Formatted coordinate String<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="parse">
<param id="input"/>
<param id="format"/>
<documentation><![CDATA[<div class="description"> Use parse() to parse an input string and convert it into a Location.<br/> <div class="param"> [String] input String to parse</div><br/> <div class="param"> format Coordinate format to use for parsing (GEO constant)</div><br/> Returns  [Location] The Location object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="enableLocationEvents">
<param id="type"/>
<param id="listener"/>
<documentation><![CDATA[<div class="description"> Request a location event with enableLocationEvents().<br/> <div class="param"> type LOCATION_ONE_SHOT for a single location request,</div><br/>      LOCATION_CONTINUOUS to enable location tracking, and<br/>      LOCATION_DISABLE to turn off location tracking<br/> <div class="param"> [Method] listener Method object to call with location updates;</div><br/>      receives a Position.Info as an argument<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getInfo">
<documentation><![CDATA[<div class="description"> Use getInfo() to retrieve the current Location.Info.<br/> Returns  [Location.Info] The Info object containing the current information<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="testInfoString">
<param id="info"/>
<documentation/>
</functionEntry>
<functionEntry name="setEnabledSensors">
<param id="sensors"/>
<documentation><![CDATA[<div class="description"> Use setEnabledSensors() to request system sensors.<br/> This will also enable the system sensors if possible.<br/> <div class="param"> [Array] sensors Array of Sensor types to enable, or [] to disable all sensors</div><br/> Returns  [Array] Array of requested sensors that were available<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="enableSensorEvents">
<param id="listener"/>
<documentation><![CDATA[<div class="description"> Use enableSensorEvents() to request a sensor event.<br/> This enables sensor events at 1Hz.<br/> <div class="param"> [Method] listener Method Object to call with sensor updates. Null for no listener</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getInfo">
<documentation><![CDATA[<div class="description"> Use getInfo() to retrieve the current Sensor.Info<br/> Returns  [Sensor.Info] object with current information.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="println">
<param id="a"/>
<documentation><![CDATA[<div class="description"> Use println() to print to the console with a line terminator.<br/> <div class="param"> a Object or string to display</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="print">
<param id="x"/>
<documentation><![CDATA[<div class="description"> Use print() to print to the console<br/> <div class="param"> x Object or string to display</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getTimer">
<documentation><![CDATA[<div class="description"> Use getTimer() to get the current millisecond timer.<br/> Returns  [Number] System millisecond timer<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getClockTime">
<documentation><![CDATA[<div class="description"> Get the current clock time with getClockTime().<br/> Returns  [System.ClockTime] Current clock time<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getDeviceSettings">
<documentation><![CDATA[<div class="description"> Get the device settings with getDeviceSettings().<br/> Returns  [DeviceSetting] The current device settings<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getSystemStats">
<documentation><![CDATA[<div class="description"> Get the current system stats with getSystemStats().<br/> Returns  [System.Stats] Current system stats<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="trap">
<documentation><![CDATA[<div class="description"> In future versions of the SDK trap() will break<br/> into the debugger.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="exit">
<documentation><![CDATA[<div class="description"> To end execution of the current system with an error message of "User terminated", call exit().<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="error">
<param id="msg"/>
<documentation><![CDATA[<div class="description"> Call error() to cause an error. This will exit the system.<br/> <div class="param"> [String] msg Error message to output</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="value"/>
<documentation/>
</functionEntry>
<functionEntry name="add">
<param id="time"/>
<documentation><![CDATA[<div class="description"> Use add() to add a Duration to a Moment.<br/> <div class="param"> [Duration] time Duration delta to add to Moment</div><br/> Returns  [Moment] The result of Moment + Duration<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="subtract">
<param id="date"/>
<documentation><![CDATA[<div class="description"> Use subtract() to compute the delta between two Moments.<br/> <div class="param"> [Moment] date Moment object used to find delta</div><br/> Returns  [Duration] Delta between date and the Moment object<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="compare">
<param id="date"/>
<documentation><![CDATA[<div class="description"> Use compare() to determine if a Moment is before or after another Moment.<br/> <div class="param"> [Moment] date Moment object to compare to this Moment</div><br/> Returns  [Number] Negative if this < that, positive if this > that, 0 if this == that<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="lessThan">
<param id="date"/>
<documentation><![CDATA[<div class="description"> Use lessThan() to determine if a Moment is less than another Moment.<br/> <div class="param"> [Moment] date Moment object to compare to this Moment</div><br/> Returns  [Boolean] true if this is less than that, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="greaterThan">
<param id="date"/>
<documentation><![CDATA[<div class="description"> Use greaterThan() to determine if a Moment is greater than another Moment.<br/> <div class="param"> [Moment] date Moment object to compare to this Moment</div><br/> Returns  [Boolean] true if this is greater than that, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="value">
<documentation><![CDATA[<div class="description"> Get the UTC value of this date with value().<br/> Returns  [Number] UTC date in seconds since UNIX epoch<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="value"/>
<documentation/>
</functionEntry>
<functionEntry name="add">
<param id="time"/>
<documentation><![CDATA[<div class="description"> Use add() to add a Moment or another Duration to a Duration.<br/> <div class="param"> time Duration or Moment to add to Duration</div><br/> Returns  Duration + Moment = Moment, Duration + Duration = Duration<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="subtract">
<param id="time"/>
<documentation><![CDATA[<div class="description"> Use subtract() to compute the delta between two Durations.<br/> <div class="param"> [Duration] time Duration object used to find delta</div><br/> Returns  [Duration] Duration object of Duration - time<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="multiply">
<param id="value"/>
<documentation><![CDATA[<div class="description"> Use multiply() to multiply a Duration by a value.<br/> <div class="param"> value Number or Float to multiply with Duration</div><br/> Returns  [Duration] Result object of Duration * value<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="divide">
<param id="value"/>
<documentation><![CDATA[<div class="description"> Use divide() to divide a Duration by a value.<br/> <div class="param"> value Number or Float to divide Duration</div><br/> Returns  [Duration] Result object of Duration / value<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="compare">
<param id="time"/>
<documentation><![CDATA[<div class="description"> Use compare() to determine if a Duration is shorter or longer than another Duration.<br/> <div class="param"> [Duration] time Duration to compare to this Duration</div><br/> Returns  [Number] Negative if this < that, positive if this > that, 0 if this == that<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="lessThan">
<param id="time"/>
<documentation><![CDATA[<div class="description"> Use lessThan() to determine if a Duration is shorter than another Duration.<br/> <div class="param"> [Duration] time Duration to comapre to this Duration</div><br/> Returns  [Boolean] true if this is less than that, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="greaterThan">
<param id="time"/>
<documentation><![CDATA[<div class="description"> Use lessThan() to determine if a Duration is longer than another Duration.<br/> <div class="param"> [Duration] time Duration to comapre to this Duration</div><br/> Returns  [Boolean] true if this is greater than that, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="value">
<documentation><![CDATA[<div class="description"> Get the Duration value with value().<br/> Returns  [Number] Duration in seconds<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="now">
<documentation><![CDATA[<div class="description"> Use now() to get a Moment for the current moment in time.<br/> Returns  [Moment] The current moment in time<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="today">
<documentation><![CDATA[<div class="description"> Use today() to get a Moment for the beginning of today based on your current GPS location.<br/> Returns  [Moment] The beginning of today<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getMonthHash">
<documentation/>
</functionEntry>
<functionEntry name="getDayHash">
<documentation/>
</functionEntry>
<functionEntry name="moment">
<param id="options"/>
<documentation><![CDATA[<div class="description"> Create a Moment object from a hash table of options with moment().<br/> <div class="param"> [Dictionary] options Hash table of options</div><br/> @option options [Number] :year The year<br/> @option options [Number] :month The month<br/> @option options [Number] :day The day<br/> @option options [Number] :hour The hour<br/> @option options [Number] :minute The minute<br/> @option options [Number] :second The second<br/> Returns  [Moment] The Moment object created using the options<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="momentNative">
<param id="year"/>
<param id="month"/>
<param id="day"/>
<param id="hour"/>
<param id="minute"/>
<param id="second"/>
<documentation/>
</functionEntry>
<functionEntry name="duration">
<param id="options"/>
<documentation><![CDATA[<div class="description"> Create a Duration object from a hash of options using duration().<br/> <div class="param"> [Dictionary] options Hash table of options</div><br/> @option options [Number] :years The number of years<br/> @option options [Number] :days The number of days<br/> @option options [Number] :hours The number of hours<br/> @option options [Number] :minutes The number of minutes<br/> @option options [Number] :seconds The number of seconds<br/> Returns  [Duration] The Duration object created using the options<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="info">
<param id="date"/>
<param id="format"/>
<documentation><![CDATA[<div class="description"> Use info() to retrieve a Gregorian.Info for a date.<br/> <div class="param"> [Moment] date Moment object to get Info from</div><br/> <div class="param"> [Number] format Time FORMAT_XXX constant to use</div><br/> Returns  [Info] For FORMAT_SHORT, all values in Info are integers. For FORMAT_MEDIUM and<br/>    FORMAT_LONG, the month/day fields have the strings for the date in question.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="start">
<param id="callback"/>
<param id="time"/>
<param id="repeat"/>
<documentation><![CDATA[<div class="description"> Use start() to start the timer. The given callback will<br/> be called no sooner than the given number<br/> of milliseconds. This will cause an error<br/> if too many timers are set. The number of<br/> available timers depends on the host system.<br/> <div class="param"> [Method] callback a function to call after the timer completes</div><br/> <div class="param"> [Number] time the number of milliseconds to wait before invoking callback</div><br/> <div class="param"> [Boolean] repeat set to true to have the timer repeat until stop() is called</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="stop">
<documentation><![CDATA[<div class="description"> Use stop() to stop the timer from running. This only<br/> needs to be called for repeating timers.<br/> The Timer can be started again by calling<br/> start().<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getProfile">
<documentation><![CDATA[<div class="description"> Use getProfile() to retrieve the current User Profile.<br/> Returns  [UserProfile.Profile] The Profile object for the user<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="keyValue"/>
<documentation/>
</functionEntry>
<functionEntry name="getKey">
<documentation><![CDATA[<div class="description"> Use getKey() to get the key value of this event.<br/> Returns  A Toybox.WatchUi.KEY_* value<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="x"/>
<param id="y"/>
<param id="type"/>
<documentation/>
</functionEntry>
<functionEntry name="getCoordinates">
<documentation><![CDATA[<div class="description"> Get the coordinates of the press with getCoordinates<br/> Returns  [Array] The press coordinates as an array of [x, y]<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getType">
<documentation><![CDATA[<div class="description"> Get the type of click event.<br/> Returns  The WATCH_UI.CLICK_TYPE_* value<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="direction"/>
<documentation/>
</functionEntry>
<functionEntry name="getDirection">
<documentation><![CDATA[<div class="description"> Get the direction of the swipe with getDirection().<br/> Returns  The WatchUi.SWIPE_* value<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="animate">
<param id="drawable"/>
<param id="property"/>
<param id="type"/>
<param id="start"/>
<param id="stop"/>
<param id="period"/>
<param id="callback"/>
<documentation><![CDATA[<div class="description"> Use animate() to animate a property over a given period of time. The animation starts<br/> after the call and runs the length of the specified period. During<br/> this time the View's draw callback will be called.<br/> <div class="param"> [Drawable] drawable Drawable to animate</div><br/> <div class="param"> [Symbol] property Symbol of property to animate over time</div><br/> <div class="param"> type Toybox.WatchUi.ANIM_TYPE_* value</div><br/> <div class="param"> [Number] start Initial value of property</div><br/> <div class="param"> [Number] stop Final value of property after animation</div><br/> <div class="param"> [Number] period Time in seconds for animation to run</div><br/> <div class="param"> [Method] callback Method object to call when complete, or null</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="loadResource">
<param id="resource"/>
<documentation><![CDATA[<div class="description"> Load a resource from the executable with loadResource().<br/> <div class="param"> [Symbol] resource Rez identifier from resources.xml to load</div><br/> Returns  A Font, Bitmap, or String resource<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onKey">
<param id="evt"/>
<documentation><![CDATA[<div class="description"> When a hard key is pressed, onKey() is called.<br/> <div class="param"> evt A WatchUi.KEY_* enum value</div><br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onTap">
<param id="evt"/>
<documentation><![CDATA[<div class="description"> When a screen tap event occurs, onTap() is called. This is sent if the user taps<br/> (quickly presses and releases) the screen.<br/> <div class="param"> [ClickEvent] evt A ClickEvent object containing information about the tap</div><br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onHold">
<param id="evt"/>
<documentation><![CDATA[<div class="description"> When a screen hold event occurs, onHold() is called. This is sent if user touches<br/> and holds on the screen.<br/> <div class="param"> [ClickEvent] evt A ClickEvent object containing information about the hold</div><br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onRelease">
<param id="evt"/>
<documentation><![CDATA[<div class="description"> When a screen release event occurs, onRelease() is called. This is only sent after an<br/> onHold event when the user stops touching the screen.<br/> <div class="param"> [ClickEvent] evt A ClickEvent object containing information about the release</div><br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onSwipe">
<param id="evt"/>
<documentation><![CDATA[<div class="description"> When a swipe event occurs, onSwipe() is called. This is sent when the user swipes the screen.<br/> <div class="param"> [SwipeEvent] evt A SwipeEvent object containing information about the swipe</div><br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="handleEvent">
<param id="evt"/>
<documentation/>
</functionEntry>
<functionEntry name="onNextPage">
<documentation><![CDATA[<div class="description"> When a next page behavior occurs, onNextPage() is called.<br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onPreviousPage">
<documentation><![CDATA[<div class="description"> When a previous page behavior occurs, onPreviousPage() is called.<br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onMenu">
<documentation><![CDATA[<div class="description"> When a menu behavior occurs, onMenu() is called.<br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onBack">
<documentation><![CDATA[<div class="description"> When a back behavior occurs, onBack() is called.<br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onNextMode">
<documentation><![CDATA[<div class="description"> When a next mode behavior occurs, onNextMode() is called.<br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onPreviousMode">
<documentation><![CDATA[<div class="description"> When a previous mode behavior occurs, onPreviousMode() is called.<br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="handleEvent">
<param id="evt"/>
<documentation/>
</functionEntry>
<functionEntry name="findDrawableById">
<param id="id"/>
<documentation><![CDATA[<div class="description"> Find a Drawable by its ID.<br/> <div class="param"> [String] id The ID of the Drawable to find</div><br/> Returns  [WatchUi.Drawable] The Drawable if found, null otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onLayout">
<param id="dc"/>
<documentation><![CDATA[<div class="description"> The entry point for the View is onLayout(). This is called before the<br/> View is shown to load resources and set up the layout of the View.<br/> <div class="param"> [Graphics.Dc] dc The drawing context</div><br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onShow">
<documentation><![CDATA[<div class="description"> When the View is brought into the foreground, onShow() is called.<br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onUpdate">
<param id="dc"/>
<documentation><![CDATA[<div class="description"> When a View is active, onUpdate() is used to update<br/> dynamic content. This function is called when<br/> the View is brought to the foreground. For widgets and<br/> watch-apps it is also called when WatchUi.requestUpdate()<br/> is called. For watchfaces it is called once a minute and<br/> for datafields it is called once a second. If a class that<br/> extends View does not implement this function then any<br/> Drawables contained in the View will automatically be drawn.<br/> <div class="param"> [Graphics.Dc] dc The drawing context</div><br/> Returns  [Boolean] true if handled, false otherwise<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onHide">
<documentation><![CDATA[<div class="description"> Before the View is removed from the foreground, onHide() is called.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setLayout">
<param id="layout"/>
<documentation><![CDATA[<div class="description"> Use setLayout() to set the layout for the View. If the extending class does not<br/> override onUpdate(), then all Drawables contained in layout will<br/> automatically be drawn by the View.<br/> <div class="param"> [Array] layout An array of Drawables</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onEnterSleep">
<documentation><![CDATA[<div class="description"> onEnterSleep() is called when the watch is entering sleep mode.<br/> Terminate any active timers and prepare for slow updates.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onExitSleep">
<documentation><![CDATA[<div class="description"> onExitSleep() is called when the watch is exiting sleep mode.<br/> Timers and animations may be started here.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="compute">
<param id="info"/>
<documentation><![CDATA[<div class="description"> To retrieve Activity.Info data for DataFields, it is necessary to override compute().<br/> This is the method that is called to update the field information.<br/> <div class="param"> [Activity.Info] info The updated Activity.Info object</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getObscurityFlags">
<documentation><![CDATA[<div class="description"> Returns  [Number] mask of OBSCURE_X values giving the sides of the display that<br/>         that are obscured by a round screen.  Valid during onUpdate.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<documentation><![CDATA[<div class="description"> Constructor<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="compute">
<param id="info"/>
<documentation><![CDATA[<div class="description"> To retrieve Activity.Info data for DataFields, it is necessary to override compute().<br/> This is the method that is called to update the field information.<br/> <div class="param"> [Activity.Info] info The updated Activity.Info object</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="requestUpdate">
<documentation><![CDATA[<div class="description"> Use requestUpdate() to request that onUpdate() method be called for the current View.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="n"/>
<param id="i"/>
<documentation/>
</functionEntry>
<functionEntry name="setTitle">
<param id="title"/>
<documentation><![CDATA[<div class="description"> Set a title for the menu.<br/> <div class="param"> [String] title The title text</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="addItem">
<param id="name"/>
<param id="id"/>
<documentation><![CDATA[<div class="description"> Add an entry to a Menu with addItem().<br/> <div class="param"> [String] name The item text</div><br/> <div class="param"> [Symbol] id A symbol representing the Menu item value</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onMenuItem">
<param id="item"/>
<documentation><![CDATA[<div class="description"> When a Menu item is chosen, onMenuItem() is called.<br/> <div class="param"> [Symbol] item The id of the chosen Menu item</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="message"/>
<documentation><![CDATA[<div class="description"> Constructor<br/> <div class="param"> [String] message A textual confirmation message</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onResponse">
<param id="response"/>
<documentation><![CDATA[<div class="description"> When a response is chosen, onResponse() is called, passing<br/> the response of CONFIRM_NO or CONFIRM_YES<br/> <div class="param"> response The response of the confirmation of CONFIRM_NO or CONFIRM_YES</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="mode"/>
<param id="initialValue"/>
<documentation><![CDATA[<div class="description"> Constructor<br/> <div class="param"> mode An enum value of type NUMBER_PICKER_*</div><br/> <div class="param"> initialValue The initial value for the Number Picker, type depends on mode</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onNumberPicked">
<param id="value"/>
<documentation><![CDATA[<div class="description"> When a number is chosen, onNumberPicked() is called, passing the chosen value.<br/> <div class="param"> value The chosen number, type depends on the NumberPicker mode</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="displayString"/>
<param id="startValue"/>
<documentation><![CDATA[<div class="description"> Constructor<br/> <div class="param"> [String] displayString The string to display on the progress bar view</div><br/> <div class="param"> [Float] startValue The initial value for the progress bar (0-100), null for "busy"</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setProgress">
<param id="progressValue"/>
<documentation><![CDATA[<div class="description"> Use setProgress() to set the value of the progress bar.<br/> <div class="param"> [Float] progressValue The value for the progress bar (0-100), null for "busy"</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setDisplayString">
<param id="displayString"/>
<documentation><![CDATA[<div class="description"> Use setDisplayString() to set the string displayed on the progress bar view.<br/> <div class="param"> [String] displayString The string to display on the progress bar view</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="initialText"/>
<documentation><![CDATA[<div class="description"> Constructor<br/> <div class="param"> initialValue The initial text for the Number Picker, type depends on mode</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onTextEntered">
<param id="text"/>
<param id="changed"/>
<documentation><![CDATA[<div class="description"> When text is entered, onTextEntered() is called, passing the entered text.<br/> <div class="param"> [String] text The entered text</div><br/> <div class="param"> [Boolean] changed If the entered text was modified</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="onCancel">
<documentation><![CDATA[<div class="description"> When the user cancels entering text, onCancel() is called.<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="pushView">
<param id="view"/>
<param id="delegate"/>
<param id="transition"/>
<documentation><![CDATA[<div class="description"> Push a View onto the View stack with pushView().<br/> <div class="param"> [View] view View to push</div><br/> <div class="param"> delegate The input delegate to handle input for the View</div><br/> <div class="param"> transition View transition of type SLIDE_*</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="popView">
<param id="transition"/>
<documentation><![CDATA[<div class="description"> Pop a View from the View stack with popView().<br/> <div class="param"> transition View transition of type SLIDE_*</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="switchToView">
<param id="view"/>
<param id="delegate"/>
<param id="transition"/>
<documentation><![CDATA[<div class="description"> Use switchToView() to pop the current View and push the new one.<br/> <div class="param"> [View] view View object to push</div><br/> <div class="param"> delegate the input delegate to handle input for the View</div><br/> <div class="param"> transition View transition of type SLIDE_*</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<documentation/>
</functionEntry>
<functionEntry name="initialize">
<documentation/>
</functionEntry>
<functionEntry name="getHeight">
<documentation><![CDATA[<div class="description"> Use getHeight() to get the height of the bitmap.<br/> Returns  [Number] Height of bitmap<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getWidth">
<documentation><![CDATA[<div class="description"> Use getWidth() to get the width of the bitmap.<br/> Returns  [Number] Width of bitmap<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="toString">
<documentation><![CDATA[<div class="description"> Use toString() to print info about this object.<br/> Returns  [String] A String representation of BitmapResource<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="pageCtrlNative">
<param id="cmd"/>
<param id="view"/>
<param id="delegate"/>
<param id="transition"/>
<documentation/>
</functionEntry>
<functionEntry name="initialize">
<param id="dictionary"/>
<documentation><![CDATA[<div class="description"> Constructor<br/> <div class="param"> [Dictionary] dictionary A Dictionary containing the settings</div><br/> @option dictionary [String] :identifier The identifier for the Drawable<br/> @option dictionary [Number] :locX The absolute screen x-coordinate for the Drawable<br/> @option dictionary [Number] :locY The absolute screen y-coordinate for the Drawable<br/> @option dictionary [Number] :width The clip width of the Drawable<br/> @option dictionary [Number] :height The clip height of the Drawable<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="draw">
<param id="dc"/>
<documentation><![CDATA[<div class="description"> Draw the object to the display context with draw(). Assume that the<br/> device context has already been configured to the proper settings.<br/> <div class="param"> [Graphics.Dc] dc The device context</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setLocation">
<param id="x"/>
<param id="y"/>
<documentation><![CDATA[<div class="description"> Set the location for this Drawable object with setLocation().<br/> <div class="param"> [Number] x Horizontal position on the screen</div><br/> <div class="param"> [Number] y Vertical position on the screen</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setSize">
<param id="w"/>
<param id="h"/>
<documentation><![CDATA[<div class="description"> Set the size of this Drawable object with setSize().<br/> <div class="param"> [Number] w Width of the Drawable object</div><br/> <div class="param"> [Number] h Height of the Drawable object</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="dictionary"/>
<documentation><![CDATA[<div class="description"> Constructor<br/> <div class="param"> [Dictionary] dictionary A Dictionary containing the settings</div><br/> @option dictionary [Symbol] :rezId The Rez identifier for the bitmap<br/> @see Drawable#initialize<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getDimensions">
<documentation><![CDATA[<div class="description"> Get the dimensions of the bitmap with getDimensions().<br/> Returns  [Array] A two element array with the contents [width, height]<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="draw">
<param id="dc"/>
<documentation><![CDATA[<div class="description"> Draw the bitmap with draw().<br/> <div class="param"> [Graphics.Dc] dc The device context</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setBitmap">
<param id="rezId"/>
<documentation><![CDATA[<div class="description"> Use setBitmap() to set the resource associated with the Bitmap.<br/> <div class="param"> [Symbol] rezId The Rez identifier for the bitmap</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="dictionary"/>
<documentation><![CDATA[<div class="description"> Constructor<br/> <div class="param"> [Dictionary] dictionary A Dictionary containing the settings</div><br/> @option dictionary :text The text string or the Rez ID of a string resource<br/> @option dictionary :color The text color of type Graphics.COLOR_*<br/> @option dictionary :font The font to use of type Graphics.FONT_*<br/> @option dictionary :justification The text justification of type Graphics.TEXT_JUSTIFY_*<br/> @see Drawable#initialize<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="draw">
<param id="dc"/>
<documentation><![CDATA[<div class="description"> Draw the Text resource with draw().<br/> <div class="param"> [Graphics.Dc] dc The draw context</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setColor">
<param id="color"/>
<documentation><![CDATA[<div class="description"> Use setColor() to set the text color.<br/> <div class="param"> color The text color of type Graphics.COLOR_*</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setFont">
<param id="font"/>
<documentation><![CDATA[<div class="description"> Use setFont() to set the text font.<br/> <div class="param"> font The font to use of type Graphics.FONT_* or from WatchUi.loadResource()</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setJustification">
<param id="justification"/>
<documentation><![CDATA[<div class="description"> Use setJustification() to set the text justification.<br/> <div class="param"> justification The text justification of type Graphics.TEXT_JUSTIFY_*</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setText">
<param id="text"/>
<documentation><![CDATA[<div class="description"> Use setText() to set the text string.<br/> <div class="param"> [String] text The text string or the Rez ID of a string resource</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initResources">
<param id="rezModule"/>
<documentation/>
</functionEntry>
<functionEntry name="close">
<documentation><![CDATA[<div class="description"> To close the device and stop the reception of data, use close().<br/> Returns  [Boolean] true if operation was successful, false else<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getCommonData">
<documentation><![CDATA[<div class="description"> Use getCommonData() to retrieve common data for the device.<br/> Returns  [CommonData] The common data with current information<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getDeviceState">
<documentation><![CDATA[<div class="description"> Use getDeviceState() to retrieve the state of the device.<br/> Returns  [DeviceState] Current device state<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getDeviceNumber">
<documentation><![CDATA[<div class="description"> To retrieve the device number of the device, use getDeviceNumber().<br/> Returns  [Number] Device number of the device<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="deviceNumber"/>
<param id="deviceType"/>
<param id="listener"/>
<documentation><![CDATA[<div class="description"> Constructor: create a Device.<br/> <div class="param"> deviceNumber [Number] Device number of the device to connect to (0 to wildcard)</div><br/> <div class="param"> deviceType   [Number] Device type of the device</div><br/> <div class="param"> listener     [Method] Method object to call with device info updates</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="open">
<documentation><![CDATA[<div class="description"> To open the device to begin receiving data, call open().<br/> Returns  [Boolean] true if operation was successful, false else<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="release">
<documentation><![CDATA[<div class="description"> Call release() to release the device (closes channel if necessary).<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setListener">
<param id="listener"/>
<documentation><![CDATA[<div class="description"> To set the listener for the device, use setListener().<br/> <div class="param"> listener [Method] Method object to call with device info updates</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getCalculatedCrankCadence">
<documentation><![CDATA[<div class="description"> Use getCalculatedCrankCadence() to get the current calculated crank cadence.<br/> Returns  [CalculatedCrankCadence] Current calculated crank cadence<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getCalculatedPower">
<documentation><![CDATA[<div class="description"> Use getCalculatedPower() to retrieve the current calculated power.<br/> Returns  [CalculatedPower] Current calculated power<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getCalculatedTorque">
<documentation><![CDATA[<div class="description"> Use getCalculatedTorque() to get the current calculated torque.<br/> Returns  [CalculatedTorque] Current calculated torque<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getCalculatedWheelDistance">
<documentation><![CDATA[<div class="description"> Use getCalculatedWheelDistance() to retrieve the current calculated wheel distance.<br/> Returns  [CalculatedWheelDistance] Current calculated wheel distance<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getCalculatedWheelSpeed">
<documentation><![CDATA[<div class="description"> Use getCalculatedWheelSpeed() to get the current calculated wheel speed.<br/> Returns  [CalculatedWheelSpeed] Current calculated wheel speed<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getPedalPowerBalance">
<documentation><![CDATA[<div class="description"> Use getPedalPowerBalance() to get the current pedal power balance.<br/> Returns  [PedalPowerBalance] Pedal power balance<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getTorqueEfficiency">
<documentation><![CDATA[<div class="description"> Use getTorqueEfficiency() to retrieve the current torque efficiency.<br/> Returns  [TorqueEfficiency] Current torque efficiency<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="deviceNumber"/>
<param id="listener"/>
<documentation><![CDATA[<div class="description"> Constructor: create a BikePower object based off the input device number.<br/> <div class="param"> deviceNumber [Number] Device number of the device to connect to (0 to wildcard)</div><br/> <div class="param"> listener     [Method] Method object to call with device info updates</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getDownloadProgress">
<documentation><![CDATA[<div class="description"> Use getDownloadProgress() to retrieve the download progress.<br/> Returns  [Number] Download progress percentage<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getProgrammableData">
<documentation><![CDATA[<div class="description"> Use getProgrammableData() to get the programmable data of the geocache.<br/> Returns  [GeocacheProgrammableData] The GeocacheProgrammableData object containing the programmable data of the geocache<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="deviceNumber"/>
<param id="listener"/>
<documentation><![CDATA[<div class="description"> Constructor: create a Geocache object based off the input device number.<br/> <div class="param"> deviceNumber [Number] Device number of the device to connect to (0 to wildcard)</div><br/> <div class="param"> listener     [Method] Method object to call with device info updates</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getAdvancedReading">
<documentation><![CDATA[<div class="description"> Use getAdvancedReading() to get the advanced weight scale reading.<br/> Returns  [WeightScaleAdvancedReading] Current advanced reading<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getBasicReading">
<documentation><![CDATA[<div class="description"> Use getBasicReading() to retrieve the basic weight scale reading.<br/> Returns  [WeightScaleBasicReading] Current basic reading<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getCapabilities">
<documentation><![CDATA[<div class="description"> Use getCapabilities() to get the capabilities of the weight scale.<br/> [WeightScaleCapabilities] Capabilities of the weight scale<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getUserProfile">
<documentation><![CDATA[<div class="description"> Use getUserProfile() to retrieve the current user profile.<br/> Returns  [WeightScaleUserProfile] User profile in use by the weight scale<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="getWeightScaleStatus">
<documentation><![CDATA[<div class="description"> Use getWeightScaleStatus() to get the status of the weight scale<br/> Returns  [Number] Enum containing the weight scale status<br/></div>]]></documentation>
</functionEntry>
<functionEntry name="initialize">
<param id="deviceNumber"/>
<param id="listener"/>
<documentation><![CDATA[<div class="description"> Constructor: create a WeightScale object based off the input device number.<br/> <div class="param"> deviceNumber [Number] Device number of the device to connect to (0 to wildcard)</div><br/> <div class="param"> listener     [Method] Method object to call with device info updates</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="setUserProfile">
<param id="userProfile"/>
<documentation><![CDATA[<div class="description"> Set the current user profile with setUserProfile().<br/> <div class="param"> [WeightScaleUserProfile] User profile to be used by the weight scale</div><br/></div>]]></documentation>
</functionEntry>
<functionEntry name="testCreateSession">
<documentation/>
</functionEntry>
<functionEntry name="testGeometryIterator">
<documentation/>
</functionEntry>
<functionEntry name="testStopDiscardRecording">
<documentation/>
</functionEntry>
<functionEntry name="testArray">
<documentation/>
</functionEntry>
<functionEntry name="testInstanceof">
<param id="object"/>
<documentation/>
</functionEntry>
<functionEntry name="testInheritanceName">
<documentation/>
</functionEntry>
<functionEntry name="testSubstringAndFind">
<documentation/>
</functionEntry>
<functionEntry name="testAbs">
<documentation/>
</functionEntry>
<functionEntry name="testFetchRegister">
<documentation/>
</functionEntry>
<functionEntry name="testBreak">
<documentation/>
</functionEntry>
<functionEntry name="testContinue">
<documentation/>
</functionEntry>
<functionEntry name="testAdd">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testSub">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testMul">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testDiv">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testBitwiseAnd">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testBitwiseOr">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testBitwiseXor">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testShiftL">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testShiftR">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testLessThan">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testLessThanEqual">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testGreaterThan">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testGreaterThanEqual">
<param id="l"/>
<param id="v"/>
<param id="e"/>
<documentation/>
</functionEntry>
<functionEntry name="testTypeCreation">
<documentation/>
</functionEntry>
<functionEntry name="testTypeConversion">
<param id="v"/>
<documentation/>
</functionEntry>
<functionEntry name="testBooleanOperations">
<documentation/>
</functionEntry>
<functionEntry name="testObjectLock">
<documentation/>
</functionEntry>
<functionEntry name="testIncr">
<documentation/>
</functionEntry>
<functionEntry name="testDecr">
<documentation/>
</functionEntry>
<functionEntry name="testNaN">
<documentation/>
</functionEntry>
<functionEntry name="testLog">
<documentation/>
</functionEntry>
<functionEntry name="getCallback">
<documentation/>
</functionEntry>
<functionEntry name="callback">
<documentation/>
</functionEntry>
<functionEntry name="testLocationRadians">
<param id="lat"/>
<param id="lon"/>
<documentation/>
</functionEntry>
<functionEntry name="testLocationDegree">
<param id="lat"/>
<param id="lon"/>
<documentation/>
</functionEntry>
<functionEntry name="testLocationSemicircles">
<param id="lat"/>
<param id="lon"/>
<documentation/>
</functionEntry>
<functionEntry name="testSystemError">
<documentation/>
</functionEntry>
<functionEntry name="testDuration">
<documentation/>
</functionEntry>
<functionEntry name="testMoment">
<documentation/>
</functionEntry>
<functionEntry name="start">
<documentation/>
</functionEntry>
<functionEntry name="stop">
<documentation/>
</functionEntry>
<functionEntry name="callback1">
<documentation/>
</functionEntry>
<functionEntry name="callback2">
<documentation/>
</functionEntry>
<functionEntry name="start">
<documentation/>
</functionEntry>
<functionEntry name="callback1">
<documentation/>
</functionEntry>
<functionEntry name="start">
<documentation/>
</functionEntry>
<functionEntry name="stop">
<documentation/>
</functionEntry>
<functionEntry name="callback1">
<documentation/>
</functionEntry>
<functionEntry name="callback2">
<documentation/>
</functionEntry>
<functionEntry name="testUserProfile">
<documentation/>
</functionEntry>
<functionEntry name="insertString">
<param id="str"/>
<documentation/>
</functionEntry>
<functionEntry name="insertWithPut">
<param id="val"/>
<documentation/>
</functionEntry>
</functions>
</debugInfo>
